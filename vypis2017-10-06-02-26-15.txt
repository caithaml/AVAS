**********************
Windows PowerShell transcript start
Start time: 20171006142615
Username: DESKTOP-TBE27PS\lukas
RunAs User: DESKTOP-TBE27PS\lukas
Configuration Name: 
Machine: DESKTOP-TBE27PS (Microsoft Windows NT 10.0.17004.0)
Host Application: C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command & 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\scripts\Start-EditorServices.ps1' -EditorServicesVersion '1.4.1' -HostName 'Visual Studio Code Host' -HostProfileId 'Microsoft.VSCode' -HostVersion '1.4.3' -AdditionalModules @('PowerShellEditorServices.VSCode') -BundledModulesPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\modules' -EnableConsoleRepl -LogLevel 'Normal' -LogPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\logs\1507291023-fefd648d-2383-4c1c-b588-3a7f691adaee1507291017262\EditorServices.log' -SessionDetailsPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\sessions\PSES-VSCode-13620-164239' -FeatureFlags @()
Process ID: 14500
PSVersion: 5.1.17004.1000
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.17004.1000
BuildVersion: 10.0.17004.1000
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is D:\SICZ\avas/vypis2017-10-06-02-26-15.txt
WARNING: Kontroluji admin prava
WARNING: Skript je nutne spustit s opravneni Administrator!
PS D:\SICZ\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      14500
computerName                   DESKTOP-TBE27PS
instanceId                     d383c525-ed6e-400f-b2f4-5236cca6be7e


PS D:\SICZ\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is D:\SICZ\avas/vypis2017-10-06-02-26-18.txt
WARNING: Kontroluji admin prava
WARNING: Skript je nutne spustit s opravneni Administrator!
PS D:\SICZ\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      14500
computerName                   DESKTOP-TBE27PS
instanceId                     d383c525-ed6e-400f-b2f4-5236cca6be7e


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Content"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Content                                        3.1.0.0    Microsoft.PowerShell.Management


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Content"

NAME
    Get-Content

SYNOPSIS
    Gets the contents of a file.


SYNTAX
    Get-Content [-Credential <PSCredential>] [-Delimiter <String>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Default | Oem | BigEndianUTF32}] [-Exclude <String[]>
    ] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-Raw] [-ReadCount <Int64>] [-Stream <String>] [-Tail <Int32>] [-TotalCount <Int64>] [-UseTransaction] [-Wait] [<CommonParameters>]

    Get-Content [-Path] <String[]> [-Credential <PSCredential>] [-Delimiter <String>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Default | Oem | BigEndianUTF32}] [
    -Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-Raw] [-ReadCount <Int64>] [-Stream <String>] [-Tail <Int32>] [-TotalCount <Int64>] [-UseTransaction] [-Wait] [<CommonParameters>]

    Get-Content [-Delimiter <string>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Default | Oem}] [-Force] [-Raw <switch>] [-Stream <string>] [-Wait] [-UseTransacti
    on] [<CommonParameters>]


DESCRIPTION
    The Get-Content cmdlet gets the content of the item at the location specified by the path, such as the text in a file. It reads the content one line at a time and returns a collection of objects, each of which rep
    resents a line of content.

    Beginning in Windows PowerShell 3.0, this cmdlet can also get a specified number of lines from the beginning or end of an item.
    In file system drives, you can use the the Get-Content cmdlet to get content that you display at the command line, save in a variable for processing, or write to another file. It is not valid on folders.

    Note: This custom cmdlet help file explains how the Get-Content cmdlet works in a file system drive. For information about the Get-Content cmdlet in all drives, type "Get-Help Get-Content -Path $null" or see Get-C
    ontent at http://go.microsoft.com/fwlink/?LinkID=113310.


RELATED LINKS
    Online version: http://technet.microsoft.com/library/hh847788(v=wps.630).aspx
    Get-Content (generic); http://go.microsoft.com/fwlink/?LinkID=113310
    FileSystem Provider
    Clear-Content
    Get-Content
    Get-ChildItem
    Get-Content
    Get-Item
    Remove-Item
    Set-Content
    Test-Path

REMARKS
    To see the examples, type: "get-help Get-Content -examples".
    For more information, type: "get-help Get-Content -detailed".
    For technical information, type: "get-help Get-Content -full".
    For online help, type: "get-help Get-Content -online"


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Content"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Content                                        3.1.0.0    Microsoft.PowerShell.Management


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Content"

NAME
    Get-Content

SYNOPSIS
    Gets the contents of a file.


SYNTAX
    Get-Content [-Credential <PSCredential>] [-Delimiter <String>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Default | Oem | BigEndianUTF32}] [-Exclude <String[]>
    ] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-Raw] [-ReadCount <Int64>] [-Stream <String>] [-Tail <Int32>] [-TotalCount <Int64>] [-UseTransaction] [-Wait] [<CommonParameters>]

    Get-Content [-Path] <String[]> [-Credential <PSCredential>] [-Delimiter <String>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Default | Oem | BigEndianUTF32}] [
    -Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-Raw] [-ReadCount <Int64>] [-Stream <String>] [-Tail <Int32>] [-TotalCount <Int64>] [-UseTransaction] [-Wait] [<CommonParameters>]

    Get-Content [-Delimiter <string>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Default | Oem}] [-Force] [-Raw <switch>] [-Stream <string>] [-Wait] [-UseTransacti
    on] [<CommonParameters>]


DESCRIPTION
    The Get-Content cmdlet gets the content of the item at the location specified by the path, such as the text in a file. It reads the content one line at a time and returns a collection of objects, each of which rep
    resents a line of content.

    Beginning in Windows PowerShell 3.0, this cmdlet can also get a specified number of lines from the beginning or end of an item.
    In file system drives, you can use the the Get-Content cmdlet to get content that you display at the command line, save in a variable for processing, or write to another file. It is not valid on folders.

    Note: This custom cmdlet help file explains how the Get-Content cmdlet works in a file system drive. For information about the Get-Content cmdlet in all drives, type "Get-Help Get-Content -Path $null" or see Get-C
    ontent at http://go.microsoft.com/fwlink/?LinkID=113310.


RELATED LINKS
    Online version: http://technet.microsoft.com/library/hh847788(v=wps.630).aspx
    Get-Content (generic); http://go.microsoft.com/fwlink/?LinkID=113310
    FileSystem Provider
    Clear-Content
    Get-Content
    Get-ChildItem
    Get-Content
    Get-Item
    Remove-Item
    Set-Content
    Test-Path

REMARKS
    To see the examples, type: "get-help Get-Content -examples".
    For more information, type: "get-help Get-Content -detailed".
    For technical information, type: "get-help Get-Content -full".
    For online help, type: "get-help Get-Content -online"


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="W:"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        W:


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="W:"

NAME
    W:

SYNTAX
    W:


ALIASES
    None


REMARKS
    None



PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Debug"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Debug                                        3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Write-Debug"

NAME
    Write-Debug

SYNOPSIS
    Writes a debug message to the console.


SYNTAX
    Write-Debug [-Message] <String> [<CommonParameters>]


DESCRIPTION
    The Write-Debug cmdlet writes debug messages to the console from a script or command.

    By default, debug messages are not displayed in the console, but you can display them by using the Debug parameter or the $DebugPreference variable.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821874
    Write-Error
    Write-Host
    Write-Output
    Write-Progress
    Write-Verbose
    Write-Warning

REMARKS
    To see the examples, type: "get-help Write-Debug -examples".
    For more information, type: "get-help Write-Debug -detailed".
    For technical information, type: "get-help Write-Debug -full".
    For online help, type: "get-help Write-Debug -online"


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Debug"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Debug                                        3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Write-Debug"

NAME
    Write-Debug

SYNOPSIS
    Writes a debug message to the console.


SYNTAX
    Write-Debug [-Message] <String> [<CommonParameters>]


DESCRIPTION
    The Write-Debug cmdlet writes debug messages to the console from a script or command.

    By default, debug messages are not displayed in the console, but you can display them by using the Debug parameter or the $DebugPreference variable.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821874
    Write-Error
    Write-Host
    Write-Output
    Write-Progress
    Write-Verbose
    Write-Warning

REMARKS
    To see the examples, type: "get-help Write-Debug -examples".
    For more information, type: "get-help Write-Debug -detailed".
    For technical information, type: "get-help Write-Debug -full".
    For online help, type: "get-help Write-Debug -online"


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Debug"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Debug                                        3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Write-Debug"

NAME
    Write-Debug

SYNOPSIS
    Writes a debug message to the console.


SYNTAX
    Write-Debug [-Message] <String> [<CommonParameters>]


DESCRIPTION
    The Write-Debug cmdlet writes debug messages to the console from a script or command.

    By default, debug messages are not displayed in the console, but you can display them by using the Debug parameter or the $DebugPreference variable.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821874
    Write-Error
    Write-Host
    Write-Output
    Write-Progress
    Write-Verbose
    Write-Warning

REMARKS
    To see the examples, type: "get-help Write-Debug -examples".
    For more information, type: "get-help Write-Debug -detailed".
    For technical information, type: "get-help Write-Debug -full".
    For online help, type: "get-help Write-Debug -online"


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Debug"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Debug                                        3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Write-Debug"

NAME
    Write-Debug

SYNOPSIS
    Writes a debug message to the console.


SYNTAX
    Write-Debug [-Message] <String> [<CommonParameters>]


DESCRIPTION
    The Write-Debug cmdlet writes debug messages to the console from a script or command.

    By default, debug messages are not displayed in the console, but you can display them by using the Debug parameter or the $DebugPreference variable.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821874
    Write-Error
    Write-Host
    Write-Output
    Write-Progress
    Write-Verbose
    Write-Warning

REMARKS
    To see the examples, type: "get-help Write-Debug -examples".
    For more information, type: "get-help Write-Debug -detailed".
    For technical information, type: "get-help Write-Debug -full".
    For online help, type: "get-help Write-Debug -online"


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Debug"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Debug                                        3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Write-Debug"

NAME
    Write-Debug

SYNOPSIS
    Writes a debug message to the console.


SYNTAX
    Write-Debug [-Message] <String> [<CommonParameters>]


DESCRIPTION
    The Write-Debug cmdlet writes debug messages to the console from a script or command.

    By default, debug messages are not displayed in the console, but you can display them by using the Debug parameter or the $DebugPreference variable.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821874
    Write-Error
    Write-Host
    Write-Output
    Write-Progress
    Write-Verbose
    Write-Warning

REMARKS
    To see the examples, type: "get-help Write-Debug -examples".
    For more information, type: "get-help Write-Debug -detailed".
    For technical information, type: "get-help Write-Debug -full".
    For online help, type: "get-help Write-Debug -online"


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Write-Host"

NAME
    Write-Host

SYNOPSIS
    Writes customized output to a host.


SYNTAX
    Write-Host [[-Object] <Object>] [-BackgroundColor {Black | DarkBlue | DarkGreen | DarkCyan | DarkRed | DarkMagenta | DarkYellow | Gray | DarkGray | Blue | Green | Cyan | Red | Magenta | Yellow | White}] [-Foregrou
    ndColor {Black | DarkBlue | DarkGreen | DarkCyan | DarkRed | DarkMagenta | DarkYellow | Gray | DarkGray | Blue | Green | Cyan | Red | Magenta | Yellow | White}] [-NoNewline] [-Separator <Object>] [<CommonParameter
    s>]


DESCRIPTION
    The Write-Host cmdlet customizes output. You can specify the color of text by using the ForegroundColor parameter, and you can specify the background color by using the BackgroundColor parameter. The Separator par
    ameter lets you specify a string to use to separate displayed objects. The particular result depends on the program that is hosting Windows PowerShell.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821876
    Clear-Host
    Write-Debug
    Write-Error
    Write-Output
    Write-Progress
    Write-Verbose
    Write-Warning

REMARKS
    To see the examples, type: "get-help Write-Host -examples".
    For more information, type: "get-help Write-Host -detailed".
    For technical information, type: "get-help Write-Host -full".
    For online help, type: "get-help Write-Host -online"


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Write-Host"

NAME
    Write-Host

SYNOPSIS
    Writes customized output to a host.


SYNTAX
    Write-Host [[-Object] <Object>] [-BackgroundColor {Black | DarkBlue | DarkGreen | DarkCyan | DarkRed | DarkMagenta | DarkYellow | Gray | DarkGray | Blue | Green | Cyan | Red | Magenta | Yellow | White}] [-Foregrou
    ndColor {Black | DarkBlue | DarkGreen | DarkCyan | DarkRed | DarkMagenta | DarkYellow | Gray | DarkGray | Blue | Green | Cyan | Red | Magenta | Yellow | White}] [-NoNewline] [-Separator <Object>] [<CommonParameter
    s>]


DESCRIPTION
    The Write-Host cmdlet customizes output. You can specify the color of text by using the ForegroundColor parameter, and you can specify the background color by using the BackgroundColor parameter. The Separator par
    ameter lets you specify a string to use to separate displayed objects. The particular result depends on the program that is hosting Windows PowerShell.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821876
    Clear-Host
    Write-Debug
    Write-Error
    Write-Output
    Write-Progress
    Write-Verbose
    Write-Warning

REMARKS
    To see the examples, type: "get-help Write-Host -examples".
    For more information, type: "get-help Write-Host -detailed".
    For technical information, type: "get-help Write-Host -full".
    For online help, type: "get-help Write-Host -online"


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Write-Host"

NAME
    Write-Host

SYNOPSIS
    Writes customized output to a host.


SYNTAX
    Write-Host [[-Object] <Object>] [-BackgroundColor {Black | DarkBlue | DarkGreen | DarkCyan | DarkRed | DarkMagenta | DarkYellow | Gray | DarkGray | Blue | Green | Cyan | Red | Magenta | Yellow | White}] [-Foregrou
    ndColor {Black | DarkBlue | DarkGreen | DarkCyan | DarkRed | DarkMagenta | DarkYellow | Gray | DarkGray | Blue | Green | Cyan | Red | Magenta | Yellow | White}] [-NoNewline] [-Separator <Object>] [<CommonParameter
    s>]


DESCRIPTION
    The Write-Host cmdlet customizes output. You can specify the color of text by using the ForegroundColor parameter, and you can specify the background color by using the BackgroundColor parameter. The Separator par
    ameter lets you specify a string to use to separate displayed objects. The particular result depends on the program that is hosting Windows PowerShell.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821876
    Clear-Host
    Write-Debug
    Write-Error
    Write-Output
    Write-Progress
    Write-Verbose
    Write-Warning

REMARKS
    To see the examples, type: "get-help Write-Host -examples".
    For more information, type: "get-help Write-Host -detailed".
    For technical information, type: "get-help Write-Host -full".
    For online help, type: "get-help Write-Host -online"


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is D:\SICZ\avas/vypis2017-10-06-02-26-39.txt
WARNING: Kontroluji admin prava
WARNING: Skript je nutne spustit s opravneni Administrator!
PS D:\SICZ\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      14500
computerName                   DESKTOP-TBE27PS
instanceId                     d383c525-ed6e-400f-b2f4-5236cca6be7e


PS D:\SICZ\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is D:\SICZ\avas/vypis2017-10-06-02-26-41.txt
WARNING: Kontroluji admin prava
WARNING: Skript je nutne spustit s opravneni Administrator!
PS D:\SICZ\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      14500
computerName                   DESKTOP-TBE27PS
instanceId                     d383c525-ed6e-400f-b2f4-5236cca6be7e


PS D:\SICZ\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is D:\SICZ\avas/vypis2017-10-06-02-26-42.txt
WARNING: Kontroluji admin prava
WARNING: Skript je nutne spustit s opravneni Administrator!
PS D:\SICZ\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      14500
computerName                   DESKTOP-TBE27PS
instanceId                     d383c525-ed6e-400f-b2f4-5236cca6be7e


PS D:\SICZ\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is D:\SICZ\avas/vypis2017-10-06-02-26-44.txt
WARNING: Kontroluji admin prava
WARNING: Skript je nutne spustit s opravneni Administrator!
PS D:\SICZ\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      14500
computerName                   DESKTOP-TBE27PS
instanceId                     d383c525-ed6e-400f-b2f4-5236cca6be7e


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Content"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Content                                        3.1.0.0    Microsoft.PowerShell.Management


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Content"

NAME
    Get-Content

SYNOPSIS
    Gets the contents of a file.


SYNTAX
    Get-Content [-Credential <PSCredential>] [-Delimiter <String>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Default | Oem | BigEndianUTF32}] [-Exclude <String[]>
    ] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-Raw] [-ReadCount <Int64>] [-Stream <String>] [-Tail <Int32>] [-TotalCount <Int64>] [-UseTransaction] [-Wait] [<CommonParameters>]

    Get-Content [-Path] <String[]> [-Credential <PSCredential>] [-Delimiter <String>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Default | Oem | BigEndianUTF32}] [
    -Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-Raw] [-ReadCount <Int64>] [-Stream <String>] [-Tail <Int32>] [-TotalCount <Int64>] [-UseTransaction] [-Wait] [<CommonParameters>]

    Get-Content [-Delimiter <string>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Default | Oem}] [-Force] [-Raw <switch>] [-Stream <string>] [-Wait] [-UseTransacti
    on] [<CommonParameters>]


DESCRIPTION
    The Get-Content cmdlet gets the content of the item at the location specified by the path, such as the text in a file. It reads the content one line at a time and returns a collection of objects, each of which rep
    resents a line of content.

    Beginning in Windows PowerShell 3.0, this cmdlet can also get a specified number of lines from the beginning or end of an item.
    In file system drives, you can use the the Get-Content cmdlet to get content that you display at the command line, save in a variable for processing, or write to another file. It is not valid on folders.

    Note: This custom cmdlet help file explains how the Get-Content cmdlet works in a file system drive. For information about the Get-Content cmdlet in all drives, type "Get-Help Get-Content -Path $null" or see Get-C
    ontent at http://go.microsoft.com/fwlink/?LinkID=113310.


RELATED LINKS
    Online version: http://technet.microsoft.com/library/hh847788(v=wps.630).aspx
    Get-Content (generic); http://go.microsoft.com/fwlink/?LinkID=113310
    FileSystem Provider
    Clear-Content
    Get-Content
    Get-ChildItem
    Get-Content
    Get-Item
    Remove-Item
    Set-Content
    Test-Path

REMARKS
    To see the examples, type: "get-help Get-Content -examples".
    For more information, type: "get-help Get-Content -detailed".
    For technical information, type: "get-help Get-Content -full".
    For online help, type: "get-help Get-Content -online"


PS D:\SICZ\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is D:\SICZ\avas/vypis2017-10-06-02-26-46.txt
WARNING: Kontroluji admin prava
WARNING: Skript je nutne spustit s opravneni Administrator!
PS D:\SICZ\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      14500
computerName                   DESKTOP-TBE27PS
instanceId                     d383c525-ed6e-400f-b2f4-5236cca6be7e


PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="appdiff"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        appdiff


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="appdiff"

NAME
    appdiff

SYNTAX
    appdiff


ALIASES
    None


REMARKS
    None



PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="appdiff"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        appdiff


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="appdiff"

NAME
    appdiff

SYNTAX
    appdiff


ALIASES
    None


REMARKS
    None



PS D:\SICZ\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="appdiff"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        appdiff


PS D:\SICZ\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="appdiff"

NAME
    appdiff

SYNTAX
    appdiff


ALIASES
    None


REMARKS
    None



PS D:\SICZ\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is D:\SICZ\avas/vypis2017-10-06-02-27-27.txt
WARNING: Kontroluji admin prava
WARNING: Skript je nutne spustit s opravneni Administrator!
PS D:\SICZ\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      14500
computerName                   DESKTOP-TBE27PS
instanceId                     d383c525-ed6e-400f-b2f4-5236cca6be7e


PS D:\SICZ\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is D:\SICZ\avas/vypis2017-10-06-02-27-50.txt
WARNING: Kontroluji admin prava
WARNING: Skript je nutne spustit s opravneni Administrator!
PS D:\SICZ\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      14500
computerName                   DESKTOP-TBE27PS
instanceId                     d383c525-ed6e-400f-b2f4-5236cca6be7e


