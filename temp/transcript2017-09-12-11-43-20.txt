**********************
Windows PowerShell transcript start
Start time: 20170912114320
Username: DESKTOP-V056PHL\lukas
RunAs User: DESKTOP-V056PHL\lukas
Configuration Name: 
Machine: DESKTOP-V056PHL (Microsoft Windows NT 10.0.16353.0)
Host Application: C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command & 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\scripts\Start-EditorServices.ps1' -EditorServicesVersion '1.4.1' -HostName 'Visual Studio Code Host' -HostProfileId 'Microsoft.VSCode' -HostVersion '1.4.2' -AdditionalModules @('PowerShellEditorServices.VSCode') -BundledModulesPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\modules' -EnableConsoleRepl -LogLevel 'Normal' -LogPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\logs\1505209342-2885d4f7-178d-4790-a3c9-5acfe660b6241505209262662\EditorServices.log' -SessionDetailsPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\sessions\PSES-VSCode-8172-411507' -FeatureFlags @()
Process ID: 204
PSVersion: 5.1.16353.1000
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.16353.1000
BuildVersion: 10.0.16353.1000
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is ./transcript2017-09-12-11-43-20.txt
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\avas-ok.ps1:81 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\avas-ok.ps1:81 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

>> TerminatingError(Compare-Object): "Cannot bind argument to parameter 'ReferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\avas-ok.ps1:84 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObject
Command
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\avas-ok.ps1:84 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\avas-ok.ps1:116 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\avas-ok.ps1:116 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException



PS>@{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      204
computerName                   DESKTOP-V056PHL
instanceId                     eeeb6034-4baa-43a9-8e45-c4558c2c859f


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="add-Member"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Add-Member                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Add-Member"

NAME
    Add-Member

SYNOPSIS
    Adds custom properties and methods to an instance of a Windows PowerShell object.


SYNTAX
    Add-Member [-MemberType] {AliasProperty | CodeProperty | Property | NoteProperty | ScriptProperty | Properties | PropertySet | Method | CodeMethod | ScriptMethod |
    Methods | ParameterizedProperty | MemberSet | Event | Dynamic | All} [-Name] <String> [[-Value] <Object>] [[-SecondValue] <Object>] [-Force] -InputObject <PSObject>
     [-PassThru] [-TypeName <String>] [<CommonParameters>]

    Add-Member [-NotePropertyName] <String> [-NotePropertyValue] <Object> [-Force] -InputObject <PSObject> [-PassThru] [-TypeName <String>] [<CommonParameters>]

    Add-Member [-NotePropertyMembers] <IDictionary> [-Force] -InputObject <PSObject> [-PassThru] [-TypeName <String>] [<CommonParameters>]

    Add-Member -InputObject <PSObject> [-PassThru] -TypeName <String> [<CommonParameters>]


DESCRIPTION
    The Add-Member cmdlet lets you add members (properties and methods) to an instance of a Windows PowerShell object. For instance, you can add a NoteProperty member t
    hat contains a description of the object or a ScriptMethod member that runs a script to change the object.

    To use Add-Member , pipe the object to Add-Member , or use the InputObject parameter to specify the object. Use the MemberType parameter to specify the type of memb
    er that you want to add, use the Name parameter to assign a name to the new member, and use the Value parameter to set the value of the member.

    The properties and methods that you add are added only to the particular instance of the object that you specify. Add-Member does not change the object type. To cre
    ate a new object type, use the Add-Type cmdlet. You can also use the Export-Clixml cmdlet to save the instance of the object, including the additional members, in a
     file. Then you can use the Import-Clixml cmdlet to re-create the instance of the object from the information that is stored in the exported file.

    Beginning in Windows PowerShell 3.0, Add-Member has new features that make it easier to add note properties to objects. You can use the NotePropertyName and NotePro
    pertyValue parameters to define a note property or use the NotePropertyMembers parameter, which takes a hash table of note property names and values.

    Also, beginning in Windows PowerShell 3.0, the PassThru parameter, which generates an output object, is needed less frequently. Add-Member now adds the new members
    directly to the input object of more types. For more information, see the PassThru parameter description.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821748
    Export-Clixml
    Get-Member
    Import-Clixml
    New-Object

REMARKS
    To see the examples, type: "get-help Add-Member -examples".
    For more information, type: "get-help Add-Member -detailed".
    For technical information, type: "get-help Add-Member -full".
    For online help, type: "get-help Add-Member -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="compareHotfixes"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        compareHotfixes


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="compareHotfixes"

NAME
    compareHotfixes

SYNTAX
    compareHotfixes [[-fobjColl] <Object>] [[-fullreport] <Object>]


ALIASES
    None


REMARKS
    None



