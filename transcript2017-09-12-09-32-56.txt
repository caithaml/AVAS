**********************
Windows PowerShell transcript start
Start time: 20170912093256
Username: DESKTOP-V056PHL\lukas
RunAs User: DESKTOP-V056PHL\lukas
Configuration Name: 
Machine: DESKTOP-V056PHL (Microsoft Windows NT 10.0.16353.0)
Host Application: C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command & 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\scripts\Start-EditorServices.ps1' -EditorServicesVersion '1.4.1' -HostName 'Visual Studio Code Host' -HostProfileId 'Microsoft.VSCode' -HostVersion '1.4.2' -AdditionalModules @('PowerShellEditorServices.VSCode') -BundledModulesPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\modules' -EnableConsoleRepl -LogLevel 'Normal' -LogPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\logs\1505201505-4afdac16-df2f-4f1c-8416-88bd36f1468c1505201455869\EditorServices.log' -SessionDetailsPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\sessions\PSES-VSCode-8256-162596' -FeatureFlags @()
Process ID: 3108
PSVersion: 5.1.16353.1000
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.16353.1000
BuildVersion: 10.0.16353.1000
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is ./transcript2017-09-12-09-32-56.txt
09/12/2017 09:32:56 - Nacitani json konfiguracniho souboru
09/12/2017 09:33:05 - Dokonce nacitani json konfiguracniho souboru
09/12/2017 09:33:05 - zjisteni zda je uzivatel admin
WARNING: Ujistete se ze spoustite AVAS jako administrator! Provedte spusteni jako administrator nebo nemusi vse funogvat korektne!!
09/12/2017 09:33:05 - ukonceno zjistovani zda je uzivatel admin
09/12/2017 09:33:05 - uzivatel je admin pokracuje dalsi spusteni skriptu
09/12/2017 09:33:05 - Nacitam GUI
09/12/2017 09:33:05 Probiha nacitani GUI
09/12/2017 09:33:18 GUI bylo nacteno
09/12/2017 09:33:18 Okno aplikace bylo uspesne nacteno
09/12/2017 09:33:18 Okno aplikace bylo uspesne zavreno
PS>@{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      3108
computerName                   DESKTOP-V056PHL
instanceId                     5b2c0968-e524-4e98-9d3a-0ce301726e5f


PS C:\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
PS C:\avas> TerminatingError(Get-WinEvent): "The parameter is incorrect"
PS C:\avas> TerminatingError(Confirm-SecureBootUEFI): "Unable to set proper privileges. Access was denied."
PS C:\avas> TerminatingError(Get-WindowsOptionalFeature): "The requested operation requires elevation.
"
PS C:\avas> TerminatingError(Get-AppxPackage): "Access is denied.

Access is denied.
"


ComputerName               : DESKTOP-V056PHL
Date                       : 12.09.2017 9:36:05
User                       : lukas
Last_User                  :
Domain                     :
Domain_TCP                 :
Domain_DHCP                : sicz.local
Site_Name                  :
Active_DC                  :
Script_StartUp             :
Script_ShutDown            :
OS                         : Microsoft Windows 10 Enterprise Insider Preview
OS_Build                   : 10.0.16353
SP                         : 0
Install_Date               : 11.09.2017 17:34:52
Last_Boot_Time             : 12.09.2017 9:29:11
RAM_Total                  : 8073
RAM_Free                   : 5
Virtual_Total              : 10
Virtual_Free               : 7
WIN_Dir                    : C:\WINDOWS
SYS_Dir                    : C:\WINDOWS\system32
TEMP_Dir                   : C:\WINDOWS\TEMP
Execution_Policy           : {@{Scope=MachinePolicy; ExecutionPolicy=Undefined}, @{Scope=UserPolicy; ExecutionPolicy=Undefined}, @{Scope=Process; ExecutionPolicy=Remote
                             Signed}, @{Scope=CurrentUser; ExecutionPolicy=Undefined}...}
TEMP_Encrypted             : N
Protect_Ini                : NN
Local_Disks                : {@{FileSystem=NTFS; Type=Local Fixed Disk; Volume=C:; Available=366471528448; Computer=DESKTOP-V056PHL; Used=133058539520; Size=49953006796
                             8}, @{FileSystem=NTFS; Type=Network Connection; Volume=K:; Available=5923527835648; Computer=DESKTOP-V056PHL; Used=5969565605888; Size=1189
                             3093441536}}
BIOS                       : DELL   - 6222004 | Default System BIOS
BIOS_Date                  : 12.08.2015 2:00:00
System_Locale              : 00000409
Default_Locale             : 00000409
Country                    : 420
Locale                     : 00000405
GemPlus_Reader             : Not Installed
Dslog_Service              : Not Installed
AV_MS_Product              : Windows Defender
AV_MS_ResidentOn           : False
AV_MS_Version              : 4.12.16353.1000
AV_MS_Scanner_Build        : 1.1.14104.0
AV_MS_Scanner_Version      : 1.251.613.0
System_Log_Length          : 1118208
Secrutiy_Log_Length        : 2166784
Application_Log_Length     : 2166784
Setupapi_Length            : 0
NetIPConfiguration         : {NetIPConfiguration, NetIPConfiguration}
LAPS                       : Not Installed
Computer_Root_Certificates : {Microsoft.PowerShell.Commands.Internal.Format.FormatStartData, Microsoft.PowerShell.Commands.Internal.Format.GroupStartData, Microsoft.Pow
                             erShell.Commands.Internal.Format.FormatEntryData, Microsoft.PowerShell.Commands.Internal.Format.FormatEntryData...}
Local_Users                : {Administrator, DefaultAccount, Guest, lukas...}
Local_Groups               : {Access Control Assistance Operators, Administrators, Backup Operators, Cryptographic Operators...}
PCinfo                     : Microsoft.PowerShell.Commands.ComputerInfo
Logs_Application           : {System.Diagnostics.Eventing.Reader.EventLogRecord, System.Diagnostics.Eventing.Reader.EventLogRecord, System.Diagnostics.Eventing.Reader.E
                             ventLogRecord, System.Diagnostics.Eventing.Reader.EventLogRecord...}
Logs_System                : {System.Diagnostics.Eventing.Reader.EventLogRecord, System.Diagnostics.Eventing.Reader.EventLogRecord, System.Diagnostics.Eventing.Reader.E
                             ventLogRecord, System.Diagnostics.Eventing.Reader.EventLogRecord...}
Logs_LanPCS                :
Logs_AppLocker_EXE         :
Logs_AppLocker_MSI         :
Logs_AppLocker_Deploy      :
Logs_AppLocker_Execution   :
Scheduled_Tasks            : {MSFT_ScheduledTask (TaskName = "backup", TaskPath = "\"), MSFT_ScheduledTask (TaskName = "nWizard_{B2FE1952-0186-46C3-BAEC-A80AA3..., Task
                             Path = "\"), MSFT_ScheduledTask (TaskName = "OneDrive Standalone Update Task-S-1-5-2..., TaskPath = "\"), MSFT_ScheduledTask (TaskName = "O
                             pera scheduled Autoupdate 1505133260", TaskPath = "\")...}
AppLocker                  : {}
Bitlocker                  :
UEFI_partition             :
Hotfixes                   :
Services                   : {AJRouter, ALG, ApHidMonitorService, AppIDSvc...}
Installed_Apps             : {@{SystemComponent=1; PSPath=Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall\Con
                             nection Manager; PSParentPath=Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall; P
                             SChildName=Connection Manager; PSDrive=HKLM; PSProvider=Microsoft.PowerShell.Core\Registry}, @{DisplayName=Mozilla Maintenance Service; Uni
                             nstallString="C:\Program Files (x86)\Mozilla Maintenance Service\uninstall.exe"; DisplayIcon=C:\Program Files (x86)\Mozilla Maintenance Ser
                             vice\Uninstall.exe,0; DisplayVersion=55.0.3; Publisher=Mozilla; Comments=Mozilla Maintenance Service; NoModify=1; EstimatedSize=467; PSPath
                             =Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall\MozillaMaintenanceService; PSPa
                             rentPath=Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall; PSChildName=MozillaMai
                             ntenanceService; PSDrive=HKLM; PSProvider=Microsoft.PowerShell.Core\Registry}, @{Comments=Nightly 57.0a1 (x64 en-US); DisplayIcon=C:\Progra
                             m Files\Nightly\firefox.exe,0; DisplayName=Nightly 57.0a1 (x64 en-US); DisplayVersion=57.0a1; HelpLink=https://support.mozilla.org; Install
                             Location=C:\Program Files\Nightly; Publisher=Mozilla; UninstallString="C:\Program Files\Nightly\uninstall\helper.exe"; URLInfoAbout=https:/
                             /www.mozilla.org; NoModify=1; NoRepair=1; EstimatedSize=111794; PSPath=Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\Software\Micr
                             osoft\Windows\CurrentVersion\Uninstall\Nightly 57.0a1 (x64 en-US); PSParentPath=Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\Soft
                             ware\Microsoft\Windows\CurrentVersion\Uninstall; PSChildName=Nightly 57.0a1 (x64 en-US); PSDrive=HKLM; PSProvider=Microsoft.PowerShell.Core
                             \Registry}, @{Publisher=Microsoft Corporation; CacheLocation=C:\MSOCache\All Users; DisplayIcon=C:\Program Files\Common Files\Microsoft Sha
                             red\OFFICE16\Office Setup Controller\OSETUP.DLL,1; DisplayName=Microsoft Office Professional Plus 2016; DisplayVersion=16.0.4266.1001; Inst
                             allLocation=C:\Program Files\Microsoft Office; ModifyPath="C:\Program Files\Common Files\Microsoft Shared\OFFICE16\Office Setup Controller\
                             setup.exe" /modify PROPLUS /dll OSETUP.DLL; NoElevateOnModify=0; NoModify=0; NoRemove=0; NoRepair=1; PackageRefs=System.String[]; ProductCo
                             des=System.String[]; ShellUITransformLanguage=cs-cz; SkuComponents=System.String[]; SPPSkuId=System.String[]; UninstallString="C:\Program F
                             iles\Common Files\Microsoft Shared\OFFICE16\Office Setup Controller\setup.exe" /uninstall PROPLUS /dll OSETUP.DLL; VersionMajor=16; Version
                             Minor=0; ProductID=00339-10000-00000-AA232; PSPath=Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\Curren
                             tVersion\Uninstall\Office16.PROPLUS; PSParentPath=Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\Current
                             Version\Uninstall; PSChildName=Office16.PROPLUS; PSDrive=HKLM; PSProvider=Microsoft.PowerShell.Core\Registry}...}
Processes                  : {System.Diagnostics.Process (ApMsgFwd), System.Diagnostics.Process (ApntEx), System.Diagnostics.Process (Apoint), System.Diagnostics.Proces
                             s (backgroundTaskHost)...}
UWF                        :
Deny_UnspecifiedDevices    :
Allow_DeviceClasses        :
Allow_DeviceIDs            :
Deny_DeviceClasses         :
Deny_DeviceIDs             :

PS C:\avas> TerminatingError(Export-Clixml): "Cannot bind argument to parameter 'Path' because it is null."
PS C:\avas> TerminatingError(Out-File): "A parameter cannot be found that matches parameter name 'Path'."


PS C:\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      3108
computerName                   DESKTOP-V056PHL
instanceId                     5b2c0968-e524-4e98-9d3a-0ce301726e5f


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-AppLockerPolicy"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-AppLockerPolicy                                2.0.0.0    AppLocker


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Windowsfeature"
PS C:\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
PS C:\avas> TerminatingError(Get-WinEvent): "The parameter is incorrect"
PS C:\avas> TerminatingError(): "The pipeline has been stopped."
>> TerminatingError(): "The pipeline has been stopped."
>> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      3108
computerName                   DESKTOP-V056PHL
instanceId                     5b2c0968-e524-4e98-9d3a-0ce301726e5f


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ItemProperty"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ItemProperty                                   3.1.0.0    Microsoft.PowerShell.Management


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ItemProperty"

NAME
    Get-ItemProperty

SYNOPSIS
    Gets the properties of a specified item.


SYNTAX
    Get-ItemProperty [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -LiteralPath <String[]> [-UseTrans
    action] [<CommonParameters>]

    Get-ItemProperty [-Path] <String[]> [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-UseTransactio
    n] [<CommonParameters>]


DESCRIPTION
    The Get-ItemProperty cmdlet gets the properties of the specified items. For example, you can use this cmdlet to get the value of the LastAccessTime property of a fi
    le object. You can also use this cmdlet to view registry entries and their values.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821588
    Clear-ItemProperty
    Copy-ItemProperty
    Move-ItemProperty
    New-ItemProperty
    Remove-ItemProperty
    Rename-ItemProperty
    Set-ItemProperty

REMARKS
    To see the examples, type: "get-help Get-ItemProperty -examples".
    For more information, type: "get-help Get-ItemProperty -detailed".
    For technical information, type: "get-help Get-ItemProperty -full".
    For online help, type: "get-help Get-ItemProperty -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ItemProperty"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ItemProperty                                   3.1.0.0    Microsoft.PowerShell.Management


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ItemProperty"

NAME
    Get-ItemProperty

SYNOPSIS
    Gets the properties of a specified item.


SYNTAX
    Get-ItemProperty [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -LiteralPath <String[]> [-UseTrans
    action] [<CommonParameters>]

    Get-ItemProperty [-Path] <String[]> [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-UseTransactio
    n] [<CommonParameters>]


DESCRIPTION
    The Get-ItemProperty cmdlet gets the properties of the specified items. For example, you can use this cmdlet to get the value of the LastAccessTime property of a fi
    le object. You can also use this cmdlet to view registry entries and their values.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821588
    Clear-ItemProperty
    Copy-ItemProperty
    Move-ItemProperty
    New-ItemProperty
    Remove-ItemProperty
    Rename-ItemProperty
    Set-ItemProperty

REMARKS
    To see the examples, type: "get-help Get-ItemProperty -examples".
    For more information, type: "get-help Get-ItemProperty -detailed".
    For technical information, type: "get-help Get-ItemProperty -full".
    For online help, type: "get-help Get-ItemProperty -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ItemProperty"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ItemProperty                                   3.1.0.0    Microsoft.PowerShell.Management


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ItemProperty"

NAME
    Get-ItemProperty

SYNOPSIS
    Gets the properties of a specified item.


SYNTAX
    Get-ItemProperty [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -LiteralPath <String[]> [-UseTrans
    action] [<CommonParameters>]

    Get-ItemProperty [-Path] <String[]> [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-UseTransactio
    n] [<CommonParameters>]


DESCRIPTION
    The Get-ItemProperty cmdlet gets the properties of the specified items. For example, you can use this cmdlet to get the value of the LastAccessTime property of a fi
    le object. You can also use this cmdlet to view registry entries and their values.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821588
    Clear-ItemProperty
    Copy-ItemProperty
    Move-ItemProperty
    New-ItemProperty
    Remove-ItemProperty
    Rename-ItemProperty
    Set-ItemProperty

REMARKS
    To see the examples, type: "get-help Get-ItemProperty -examples".
    For more information, type: "get-help Get-ItemProperty -detailed".
    For technical information, type: "get-help Get-ItemProperty -full".
    For online help, type: "get-help Get-ItemProperty -online"


PS C:\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is ./funkce-transcript2017-09-12-09-41-27.txt
09/12/2017 09:41:31 Active DC
09/12/2017 09:41:31 Allow deviceclasses
09/12/2017 09:41:31 Allow deviceids
09/12/2017 09:41:31 app log lenght
18944000
09/12/2017 09:41:31 applocker
09/12/2017 09:41:31 bios
DELL   - 1072009 | BIOS Date: 12/22/16 01:25:40 Ver: A20.00
09/12/2017 09:41:31 bios datum

09/12/2017 09:41:31 bitlocker
09/12/2017 09:41:31 root certifikaty
09/12/2017 09:41:31 PC nazev
09/12/2017 09:41:31 zeme - lokalizace
09/12/2017 09:41:31 default locale
09/12/2017 09:41:31 deny device class
09/12/2017 09:41:31 deny devices ID

value              DateTime
-----              --------
22.12.2016 0:00:00 čtvrtek 22. prosince 2016 1:00:00






































































MICA
420
00000409


PS C:\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      3108
computerName                   DESKTOP-V056PHL
instanceId                     5b2c0968-e524-4e98-9d3a-0ce301726e5f


