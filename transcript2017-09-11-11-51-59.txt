**********************
Windows PowerShell transcript start
Start time: 20170911115200
Username: DESKTOP-V056PHL\lukas
RunAs User: DESKTOP-V056PHL\lukas
Configuration Name: 
Machine: DESKTOP-V056PHL (Microsoft Windows NT 10.0.16281.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command & 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\scripts\Start-EditorServices.ps1' -EditorServicesVersion '1.4.1' -HostName 'Visual Studio Code Host' -HostProfileId 'Microsoft.VSCode' -HostVersion '1.4.2' -AdditionalModules @('PowerShellEditorServices.VSCode') -BundledModulesPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\modules' -EnableConsoleRepl -LogLevel 'Normal' -LogPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\logs\1505123495-6aad6873-df96-42f9-b4ef-7ea0c3d99ede1505123068860\EditorServices.log' -SessionDetailsPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\sessions\PSES-VSCode-6400-702141' -FeatureFlags @()
Process ID: 10988
PSVersion: 5.1.16281.1000
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.16281.1000
BuildVersion: 10.0.16281.1000
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is ./transcript2017-09-11-11-51-59.txt
PS>TerminatingError(Compare-Object): "Cannot bind argument to parameter 'DifferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\avas\hotfixy.ps1:6 char:60
+ ... Object -ReferenceObject $default -DifferenceObject $installed  -Prope ...
+                                                        ~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObject
Command
Compare-Object : Cannot bind argument to parameter 'DifferenceObject' because it is null.
At C:\avas\hotfixy.ps1:6 char:60
+ ... Object -ReferenceObject $default -DifferenceObject $installed  -Prope ...
+                                                        ~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

PS>@{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      10988
computerName                   DESKTOP-V056PHL
instanceId                     f9ea0a8a-aabf-43d1-bb8c-fbf959791847


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Content"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Content                                        3.1.0.0    Microsoft.PowerShell.Management


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Content"

NAME
    Get-Content

SYNOPSIS
    Gets the contents of a file.


SYNTAX
    Get-Content [-Credential <PSCredential>] [-Delimiter <String>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Defa
    ult | Oem | BigEndianUTF32}] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-Raw] [-ReadCount <Int64>] [-Stream <S
    tring>] [-Tail <Int32>] [-TotalCount <Int64>] [-UseTransaction] [-Wait] [<CommonParameters>]

    Get-Content [-Path] <String[]> [-Credential <PSCredential>] [-Delimiter <String>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | U
    TF32 | Ascii | Default | Oem | BigEndianUTF32}] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-Raw] [-ReadCount <Int64>] [-Stream <String
    >] [-Tail <Int32>] [-TotalCount <Int64>] [-UseTransaction] [-Wait] [<CommonParameters>]

    Get-Content [-Delimiter <string>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Default | Oem}] [-Force] [-Raw <s
    witch>] [-Stream <string>] [-Wait] [-UseTransaction] [<CommonParameters>]


DESCRIPTION
    The Get-Content cmdlet gets the content of the item at the location specified by the path, such as the text in a file. It reads the content one line at a time and r
    eturns a collection of objects, each of which represents a line of content.

    Beginning in Windows PowerShell 3.0, this cmdlet can also get a specified number of lines from the beginning or end of an item.
    In file system drives, you can use the the Get-Content cmdlet to get content that you display at the command line, save in a variable for processing, or write to an
    other file. It is not valid on folders.

    Note: This custom cmdlet help file explains how the Get-Content cmdlet works in a file system drive. For information about the Get-Content cmdlet in all drives, typ
    e "Get-Help Get-Content -Path $null" or see Get-Content at http://go.microsoft.com/fwlink/?LinkID=113310.


RELATED LINKS
    Online version: http://technet.microsoft.com/library/hh847788(v=wps.630).aspx
    Get-Content (generic); http://go.microsoft.com/fwlink/?LinkID=113310
    FileSystem Provider
    Clear-Content
    Get-Content
    Get-ChildItem
    Get-Content
    Get-Item
    Remove-Item
    Set-Content
    Test-Path

REMARKS
    To see the examples, type: "get-help Get-Content -examples".
    For more information, type: "get-help Get-Content -detailed".
    For technical information, type: "get-help Get-Content -full".
    For online help, type: "get-help Get-Content -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="O:"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        O:


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="O:"

NAME
    O:

SYNTAX
    O:


ALIASES
    None


REMARKS
    None



PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-CurrentFile"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Out-CurrentFile                                    0.1.1      PowerShellEditorServices.Commands


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-CurrentFile"

NAME
    Out-CurrentFile

SYNOPSIS
    Sends the output through Out-String to the current open editor file.


SYNTAX
    Out-CurrentFile [-InputObject] <Object> [<CommonParameters>]


DESCRIPTION
    The Out-CurrentFile cmdlet sends output through Out-String to the current open editor file.


RELATED LINKS
    Online Version: https://github.com/PowerShell/PowerShellEditorServices/tree/master/module/docs/Out-CurrentFile.md

REMARKS
    To see the examples, type: "get-help Out-CurrentFile -examples".
    For more information, type: "get-help Out-CurrentFile -detailed".
    For technical information, type: "get-help Out-CurrentFile -full".
    For online help, type: "get-help Out-CurrentFile -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-CurrentFile"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Out-CurrentFile                                    0.1.1      PowerShellEditorServices.Commands


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-CurrentFile"

NAME
    Out-CurrentFile

SYNOPSIS
    Sends the output through Out-String to the current open editor file.


SYNTAX
    Out-CurrentFile [-InputObject] <Object> [<CommonParameters>]


DESCRIPTION
    The Out-CurrentFile cmdlet sends output through Out-String to the current open editor file.


RELATED LINKS
    Online Version: https://github.com/PowerShell/PowerShellEditorServices/tree/master/module/docs/Out-CurrentFile.md

REMARKS
    To see the examples, type: "get-help Out-CurrentFile -examples".
    For more information, type: "get-help Out-CurrentFile -detailed".
    For technical information, type: "get-help Out-CurrentFile -full".
    For online help, type: "get-help Out-CurrentFile -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-Default"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-Default                                        3.0.0.0    Microsoft.PowerShell.Core


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-Default"

NAME
    Out-Default

SYNOPSIS
    Sends the output to the default formatter and to the default output cmdlet.


SYNTAX
    Out-Default [-InputObject <PSObject>] [-Transcript] [<CommonParameters>]


DESCRIPTION
    The Out-Default cmdlet sends output to the default formatter and the default output cmdlet. This cmdlet has no effect on the formatting or output of Windows PowerSh
    ell commands. It is a placeholder that lets you write your own Out-Default function or cmdlet.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821502

REMARKS
    To see the examples, type: "get-help Out-Default -examples".
    For more information, type: "get-help Out-Default -detailed".
    For technical information, type: "get-help Out-Default -full".
    For online help, type: "get-help Out-Default -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-File"

NAME
    Out-File

SYNOPSIS
    Sends output to a file.


SYNTAX
    Out-File [-FilePath] <String> [[-Encoding] {unknown | string | unicode | bigendianunicode | utf8 | utf7 | utf32 | ascii | default | oem}] [-Append] [-Confirm] [-For
    ce] [-InputObject <PSObject>] [-NoClobber] [-NoNewline] [-WhatIf] [-Width <Int32>] [<CommonParameters>]

    Out-File [[-Encoding] {unknown | string | unicode | bigendianunicode | utf8 | utf7 | utf32 | ascii | default | oem}] [-Append] [-Confirm] [-Force] [-InputObject <PS
    Object>] -LiteralPath <String> [-NoClobber] [-NoNewline] [-WhatIf] [-Width <Int32>] [<CommonParameters>]


DESCRIPTION
    The Out-File cmdlet sends output to a file. You can use this cmdlet instead of the redirection operator (>) when you need to use its parameters.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821839
    Out-GridView
    Out-Printer
    Out-String
    Tee-Object

REMARKS
    To see the examples, type: "get-help Out-File -examples".
    For more information, type: "get-help Out-File -detailed".
    For technical information, type: "get-help Out-File -full".
    For online help, type: "get-help Out-File -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="E:"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        E:


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="E:"

NAME
    E:

SYNTAX
    E:


ALIASES
    None


REMARKS
    None



PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="O:"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        O:


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="O:"

NAME
    O:

SYNTAX
    O:


ALIASES
    None


REMARKS
    None



PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-CurrentFile"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Out-CurrentFile                                    0.1.1      PowerShellEditorServices.Commands


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-CurrentFile"

NAME
    Out-CurrentFile

SYNOPSIS
    Sends the output through Out-String to the current open editor file.


SYNTAX
    Out-CurrentFile [-InputObject] <Object> [<CommonParameters>]


DESCRIPTION
    The Out-CurrentFile cmdlet sends output through Out-String to the current open editor file.


RELATED LINKS
    Online Version: https://github.com/PowerShell/PowerShellEditorServices/tree/master/module/docs/Out-CurrentFile.md

REMARKS
    To see the examples, type: "get-help Out-CurrentFile -examples".
    For more information, type: "get-help Out-CurrentFile -detailed".
    For technical information, type: "get-help Out-CurrentFile -full".
    For online help, type: "get-help Out-CurrentFile -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-CurrentFile"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Out-CurrentFile                                    0.1.1      PowerShellEditorServices.Commands


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-CurrentFile"

NAME
    Out-CurrentFile

SYNOPSIS
    Sends the output through Out-String to the current open editor file.


SYNTAX
    Out-CurrentFile [-InputObject] <Object> [<CommonParameters>]


DESCRIPTION
    The Out-CurrentFile cmdlet sends output through Out-String to the current open editor file.


RELATED LINKS
    Online Version: https://github.com/PowerShell/PowerShellEditorServices/tree/master/module/docs/Out-CurrentFile.md

REMARKS
    To see the examples, type: "get-help Out-CurrentFile -examples".
    For more information, type: "get-help Out-CurrentFile -detailed".
    For technical information, type: "get-help Out-CurrentFile -full".
    For online help, type: "get-help Out-CurrentFile -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-CurrentFile"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Out-CurrentFile                                    0.1.1      PowerShellEditorServices.Commands


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-CurrentFile"

NAME
    Out-CurrentFile

SYNOPSIS
    Sends the output through Out-String to the current open editor file.


SYNTAX
    Out-CurrentFile [-InputObject] <Object> [<CommonParameters>]


DESCRIPTION
    The Out-CurrentFile cmdlet sends output through Out-String to the current open editor file.


RELATED LINKS
    Online Version: https://github.com/PowerShell/PowerShellEditorServices/tree/master/module/docs/Out-CurrentFile.md

REMARKS
    To see the examples, type: "get-help Out-CurrentFile -examples".
    For more information, type: "get-help Out-CurrentFile -detailed".
    For technical information, type: "get-help Out-CurrentFile -full".
    For online help, type: "get-help Out-CurrentFile -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-Default"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-Default                                        3.0.0.0    Microsoft.PowerShell.Core


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-Default"

NAME
    Out-Default

SYNOPSIS
    Sends the output to the default formatter and to the default output cmdlet.


SYNTAX
    Out-Default [-InputObject <PSObject>] [-Transcript] [<CommonParameters>]


DESCRIPTION
    The Out-Default cmdlet sends output to the default formatter and the default output cmdlet. This cmdlet has no effect on the formatting or output of Windows PowerSh
    ell commands. It is a placeholder that lets you write your own Out-Default function or cmdlet.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821502

REMARKS
    To see the examples, type: "get-help Out-Default -examples".
    For more information, type: "get-help Out-Default -detailed".
    For technical information, type: "get-help Out-Default -full".
    For online help, type: "get-help Out-Default -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-File"

NAME
    Out-File

SYNOPSIS
    Sends output to a file.


SYNTAX
    Out-File [-FilePath] <String> [[-Encoding] {unknown | string | unicode | bigendianunicode | utf8 | utf7 | utf32 | ascii | default | oem}] [-Append] [-Confirm] [-For
    ce] [-InputObject <PSObject>] [-NoClobber] [-NoNewline] [-WhatIf] [-Width <Int32>] [<CommonParameters>]

    Out-File [[-Encoding] {unknown | string | unicode | bigendianunicode | utf8 | utf7 | utf32 | ascii | default | oem}] [-Append] [-Confirm] [-Force] [-InputObject <PS
    Object>] -LiteralPath <String> [-NoClobber] [-NoNewline] [-WhatIf] [-Width <Int32>] [<CommonParameters>]


DESCRIPTION
    The Out-File cmdlet sends output to a file. You can use this cmdlet instead of the redirection operator (>) when you need to use its parameters.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821839
    Out-GridView
    Out-Printer
    Out-String
    Tee-Object

REMARKS
    To see the examples, type: "get-help Out-File -examples".
    For more information, type: "get-help Out-File -detailed".
    For technical information, type: "get-help Out-File -full".
    For online help, type: "get-help Out-File -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="get-date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-M
    onth <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Sec
    ond <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX
    formats. You can use Get-Date to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="get-date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-M
    onth <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Sec
    ond <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX
    formats. You can use Get-Date to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="E:"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        E:


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="E:"

NAME
    E:

SYNTAX
    E:


ALIASES
    None


REMARKS
    None



PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Exit-PSHostProcess"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Exit-PSHostProcess                                 3.0.0.0    Microsoft.PowerShell.Core


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Exit-PSHostProcess"

NAME
    Exit-PSHostProcess

SYNOPSIS
    Closes an interactive session with a local process.


SYNTAX
    Exit-PSHostProcess [<CommonParameters>]


DESCRIPTION
    The Exit-PSHostProcess cmdlet closes an interactive session with a local process that you have opened by running the Enter-PSHostProcess cmdlet. You run the Exit-PS
    HostProcess cmdlet from within the process, when you are finished debugging or troubleshooting a script that is running within a process.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkID=403737
    Enter-PSHostProcess

REMARKS
    To see the examples, type: "get-help Exit-PSHostProcess -examples".
    For more information, type: "get-help Exit-PSHostProcess -detailed".
    For technical information, type: "get-help Exit-PSHostProcess -full".
    For online help, type: "get-help Exit-PSHostProcess -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Expand-Archive"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Expand-Archive                                     1.0.1.0    Microsoft.PowerShell.Archive


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Expand-Archive"

NAME
    Expand-Archive

SYNOPSIS
    Extracts files from a specified archive (zipped) file.


SYNTAX
    Expand-Archive [[-DestinationPath] <String>] [-Confirm] [-Force] -LiteralPath <String> [-WhatIf] [<CommonParameters>]

    Expand-Archive [-Path] <String> [[-DestinationPath] <String>] [-Confirm] [-Force] [-WhatIf] [<CommonParameters>]


DESCRIPTION
    The Expand-Archive cmdlet extracts files from a specified zipped archive file to a specified destination folder. An archive file allows multiple files to be package
    d, and optionally compressed, into a single zipped file for easier distribution and storage.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821655

REMARKS
    To see the examples, type: "get-help Expand-Archive -examples".
    For more information, type: "get-help Expand-Archive -detailed".
    For technical information, type: "get-help Expand-Archive -full".
    For online help, type: "get-help Expand-Archive -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Export-Alias"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Alias                                       3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Export-Alias"

NAME
    Export-Alias

SYNOPSIS
    Exports information about currently defined aliases to a file.


SYNTAX
    Export-Alias [[-Name] <String[]>] [-Append] [-As {Csv | Script}] [-Confirm] [-Description <String>] [-Force] -LiteralPath <String> [-NoClobber] [-PassThru] [-Scope
    <String>] [-WhatIf] [<CommonParameters>]

    Export-Alias [-Path] <String> [[-Name] <String[]>] [-Append] [-As {Csv | Script}] [-Confirm] [-Description <String>] [-Force] [-NoClobber] [-PassThru] [-Scope <Stri
    ng>] [-WhatIf] [<CommonParameters>]


DESCRIPTION
    The Export-Alias cmdlet exports the aliases in the current session to a file. If the output file does not exist, the cmdlet will create it. Export-Alias can export
    the aliases in a particular scope or all scopes, it can generate the data in CSV format or as a series of Set-Alias commands that you can add to a session or to a W
    indows PowerShell profile.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821766
    Get-Alias
    Import-Alias
    New-Alias
    Set-Alias

REMARKS
    To see the examples, type: "get-help Export-Alias -examples".
    For more information, type: "get-help Export-Alias -detailed".
    For technical information, type: "get-help Export-Alias -full".
    For online help, type: "get-help Export-Alias -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Export-Alias"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Alias                                       3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Export-Alias"

NAME
    Export-Alias

SYNOPSIS
    Exports information about currently defined aliases to a file.


SYNTAX
    Export-Alias [[-Name] <String[]>] [-Append] [-As {Csv | Script}] [-Confirm] [-Description <String>] [-Force] -LiteralPath <String> [-NoClobber] [-PassThru] [-Scope
    <String>] [-WhatIf] [<CommonParameters>]

    Export-Alias [-Path] <String> [[-Name] <String[]>] [-Append] [-As {Csv | Script}] [-Confirm] [-Description <String>] [-Force] [-NoClobber] [-PassThru] [-Scope <Stri
    ng>] [-WhatIf] [<CommonParameters>]


DESCRIPTION
    The Export-Alias cmdlet exports the aliases in the current session to a file. If the output file does not exist, the cmdlet will create it. Export-Alias can export
    the aliases in a particular scope or all scopes, it can generate the data in CSV format or as a series of Set-Alias commands that you can add to a session or to a W
    indows PowerShell profile.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821766
    Get-Alias
    Import-Alias
    New-Alias
    Set-Alias

REMARKS
    To see the examples, type: "get-help Export-Alias -examples".
    For more information, type: "get-help Export-Alias -detailed".
    For technical information, type: "get-help Export-Alias -full".
    For online help, type: "get-help Export-Alias -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Export-Alias"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Alias                                       3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Export-Alias"

NAME
    Export-Alias

SYNOPSIS
    Exports information about currently defined aliases to a file.


SYNTAX
    Export-Alias [[-Name] <String[]>] [-Append] [-As {Csv | Script}] [-Confirm] [-Description <String>] [-Force] -LiteralPath <String> [-NoClobber] [-PassThru] [-Scope
    <String>] [-WhatIf] [<CommonParameters>]

    Export-Alias [-Path] <String> [[-Name] <String[]>] [-Append] [-As {Csv | Script}] [-Confirm] [-Description <String>] [-Force] [-NoClobber] [-PassThru] [-Scope <Stri
    ng>] [-WhatIf] [<CommonParameters>]


DESCRIPTION
    The Export-Alias cmdlet exports the aliases in the current session to a file. If the output file does not exist, the cmdlet will create it. Export-Alias can export
    the aliases in a particular scope or all scopes, it can generate the data in CSV format or as a series of Set-Alias commands that you can add to a session or to a W
    indows PowerShell profile.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821766
    Get-Alias
    Import-Alias
    New-Alias
    Set-Alias

REMARKS
    To see the examples, type: "get-help Export-Alias -examples".
    For more information, type: "get-help Export-Alias -detailed".
    For technical information, type: "get-help Export-Alias -full".
    For online help, type: "get-help Export-Alias -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Export-Alias"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Alias                                       3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Export-Alias"

NAME
    Export-Alias

SYNOPSIS
    Exports information about currently defined aliases to a file.


SYNTAX
    Export-Alias [[-Name] <String[]>] [-Append] [-As {Csv | Script}] [-Confirm] [-Description <String>] [-Force] -LiteralPath <String> [-NoClobber] [-PassThru] [-Scope
    <String>] [-WhatIf] [<CommonParameters>]

    Export-Alias [-Path] <String> [[-Name] <String[]>] [-Append] [-As {Csv | Script}] [-Confirm] [-Description <String>] [-Force] [-NoClobber] [-PassThru] [-Scope <Stri
    ng>] [-WhatIf] [<CommonParameters>]


DESCRIPTION
    The Export-Alias cmdlet exports the aliases in the current session to a file. If the output file does not exist, the cmdlet will create it. Export-Alias can export
    the aliases in a particular scope or all scopes, it can generate the data in CSV format or as a series of Set-Alias commands that you can add to a session or to a W
    indows PowerShell profile.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821766
    Get-Alias
    Import-Alias
    New-Alias
    Set-Alias

REMARKS
    To see the examples, type: "get-help Export-Alias -examples".
    For more information, type: "get-help Export-Alias -detailed".
    For technical information, type: "get-help Export-Alias -full".
    For online help, type: "get-help Export-Alias -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Export-Certificate"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Certificate                                 1.0.0.0    PKI


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Export-Certificate"

NAME
    Export-Certificate

SYNOPSIS
    Exports a certificate from a certificate store into a file.


SYNTAX
    Export-Certificate [-Force] [-NoClobber] [-Type {SST | CERT | P7B}] -Cert <Certificate> -FilePath <String> [-Confirm] [-WhatIf] [<CommonParameters>]


DESCRIPTION
    The Export-Certificate cmdlet exports a certificate from a certificate store to a file. The private key is not included in the export. If more than one certificate
    is being exported, then the default file format is SST. Otherwise, the default format is CERT. Use the Type parameter to change the file format.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/p/?linkid=287526
    Get-ChildItem
    Import-Certificate

REMARKS
    To see the examples, type: "get-help Export-Certificate -examples".
    For more information, type: "get-help Export-Certificate -detailed".
    For technical information, type: "get-help Export-Certificate -full".
    For online help, type: "get-help Export-Certificate -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Export-Csv"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Csv                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Export-Csv"

NAME
    Export-Csv

SYNOPSIS
    Converts objects into a series of comma-separated (CSV) strings and saves the strings in a CSV file.


SYNTAX
    Export-Csv [[-Path] <String>] [[-Delimiter] <Char>] [-Append] [-Confirm] [-Encoding {Unicode | UTF7 | UTF8 | ASCII | UTF32 | BigEndianUnicode | Default | OEM}] [-Fo
    rce] -InputObject <PSObject> [-LiteralPath <String>] [-NoClobber] [-NoTypeInformation] [-WhatIf] [<CommonParameters>]

    Export-Csv [[-Path] <String>] [-Append] [-Confirm] [-Encoding {Unicode | UTF7 | UTF8 | ASCII | UTF32 | BigEndianUnicode | Default | OEM}] [-Force] -InputObject <PSO
    bject> [-LiteralPath <String>] [-NoClobber] [-NoTypeInformation] [-UseCulture] [-WhatIf] [<CommonParameters>]


DESCRIPTION
    The Export-CSV cmdlet creates a CSV file of the objects that you submit. Each object is represented as a line or row of the CSV. The row consists of a comma-separat
    ed list of the values of object properties. You can use this cmdlet to create spreadsheets and share data with programs that take CSV files as input.

    Do not format objects before sending them to the Export-CSV cmdlet. If you do, the format properties are represented in the CSV file, instead of the properties of t
    he original objects. To export only selected properties of an object, use the Select-Object cmdlet.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821769
    ConvertFrom-Csv
    ConvertTo-Csv
    Format-Table
    Import-Csv
    Select-Object

REMARKS
    To see the examples, type: "get-help Export-Csv -examples".
    For more information, type: "get-help Export-Csv -detailed".
    For technical information, type: "get-help Export-Csv -full".
    For online help, type: "get-help Export-Csv -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Export-Csv"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Csv                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Export-Csv"

NAME
    Export-Csv

SYNOPSIS
    Converts objects into a series of comma-separated (CSV) strings and saves the strings in a CSV file.


SYNTAX
    Export-Csv [[-Path] <String>] [[-Delimiter] <Char>] [-Append] [-Confirm] [-Encoding {Unicode | UTF7 | UTF8 | ASCII | UTF32 | BigEndianUnicode | Default | OEM}] [-Fo
    rce] -InputObject <PSObject> [-LiteralPath <String>] [-NoClobber] [-NoTypeInformation] [-WhatIf] [<CommonParameters>]

    Export-Csv [[-Path] <String>] [-Append] [-Confirm] [-Encoding {Unicode | UTF7 | UTF8 | ASCII | UTF32 | BigEndianUnicode | Default | OEM}] [-Force] -InputObject <PSO
    bject> [-LiteralPath <String>] [-NoClobber] [-NoTypeInformation] [-UseCulture] [-WhatIf] [<CommonParameters>]


DESCRIPTION
    The Export-CSV cmdlet creates a CSV file of the objects that you submit. Each object is represented as a line or row of the CSV. The row consists of a comma-separat
    ed list of the values of object properties. You can use this cmdlet to create spreadsheets and share data with programs that take CSV files as input.

    Do not format objects before sending them to the Export-CSV cmdlet. If you do, the format properties are represented in the CSV file, instead of the properties of t
    he original objects. To export only selected properties of an object, use the Select-Object cmdlet.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821769
    ConvertFrom-Csv
    ConvertTo-Csv
    Format-Table
    Import-Csv
    Select-Object

REMARKS
    To see the examples, type: "get-help Export-Csv -examples".
    For more information, type: "get-help Export-Csv -detailed".
    For technical information, type: "get-help Export-Csv -full".
    For online help, type: "get-help Export-Csv -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Export-Csv"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Csv                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Export-Csv"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Csv                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Export-Csv"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Csv                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Export-Csv"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Csv                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Export-Csv"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Export-Csv                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="get-date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-M
    onth <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Sec
    ond <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX
    formats. You can use Get-Date to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="get-date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-M
    onth <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Sec
    ond <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX
    formats. You can use Get-Date to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-NetIPConfiguration"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Get-NetIPConfiguration                             1.0.0.0    NetTCPIP


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-NetIPConfiguration"

NAME
    Get-NetIPConfiguration

SYNOPSIS
    Gets IP network configuration.


SYNTAX
    Get-NetIPConfiguration [[-InterfaceAlias] <String>] [-AllCompartments] [-CimSession <CimSession>] [-CompartmentId <Int32>] [-Detailed] [<CommonParameters>]

    Get-NetIPConfiguration [-AllCompartments] [-CimSession <CimSession>] [-CompartmentId <Int32>] [-Detailed] -All [<CommonParameters>]

    Get-NetIPConfiguration [-AllCompartments] [-CimSession <CimSession>] [-CompartmentId <Int32>] [-Detailed] -InterfaceIndex <Int32> [<CommonParameters>]


DESCRIPTION
    The Get-NetIPConfiguration cmdlet gets network configuration, including usable interfaces, IP addresses, and DNS servers.

    If you do not specify any parameters, this cmdlet gets IP configuration properties for all non-virtual connected interfaces on a computer.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=288381
    Get-DNSClientServerAddress
    Get-NetAdapter
    Get-NetIPAddress
    Get-NetIPInterface
    Get-NetRoute

REMARKS
    To see the examples, type: "get-help Get-NetIPConfiguration -examples".
    For more information, type: "get-help Get-NetIPConfiguration -detailed".
    For technical information, type: "get-help Get-NetIPConfiguration -full".
    For online help, type: "get-help Get-NetIPConfiguration -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ChildItem"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ChildItem                                      3.1.0.0    Microsoft.PowerShell.Management


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ChildItem"

NAME
    Get-ChildItem

SYNOPSIS
    Gets the files and folders in a file system drive.


SYNTAX
    Get-ChildItem [[-Filter] <String>] [-Attributes {ReadOnly | Hidden | System | Directory | Archive | Device | Normal | Temporary | SparseFile | ReparsePoint | Compre
    ssed | Offline | NotContentIndexed | Encrypted | IntegrityStream | NoScrubData}] [-Depth <UInt32>] [-Directory] [-Exclude <String[]>] [-File] [-Force] [-Hidden] [-I
    nclude <String[]>] -LiteralPath <String[]> [-Name] [-ReadOnly] [-Recurse] [-System] [-UseTransaction] [<CommonParameters>]

    Get-ChildItem [[-Path] <String[]>] [[-Filter] <String>] [-Attributes {ReadOnly | Hidden | System | Directory | Archive | Device | Normal | Temporary | SparseFile |
    ReparsePoint | Compressed | Offline | NotContentIndexed | Encrypted | IntegrityStream | NoScrubData}] [-Depth <UInt32>] [-Directory] [-Exclude <String[]>] [-File] [
    -Force] [-Hidden] [-Include <String[]>] [-Name] [-ReadOnly] [-Recurse] [-System] [-UseTransaction] [<CommonParameters>]

    Get-ChildItem [-Attributes <FileAttributes]>] [-Directory] [-File] [-Force] [-Hidden] [-ReadOnly] [-System] [-UseTransaction] [<CommonParameters>]


DESCRIPTION
    The Get-ChildItem cmdlet gets the items in one or more specified locations. If the item is a container, it gets the items inside the container, known as child items
    . You can use the Recurse parameter to get items in all child containers.

    A location can be a file system location, such as a directory, or a location exposed by a different Windows PowerShell provider, such as a registry hive or a certif
    icate store.
    In a file system drive, the Get-ChildItem cmdlet gets the directories, subdirectories, and files. In a file system directory, it gets subdirectories and files.

    By default, Get-ChildItem gets non-hidden items, but you can use the Directory, File, Hidden, ReadOnly, and System parameters to get only items with these attribute
    s. To create a complex attribute search, use the Attributes parameter. If you use these parameters, Get-ChildItem gets only the items that meet all search condition
    s, as though the parameters were connected by an AND operator.

    Note: This custom cmdlet help file explains how the Get-ChildItem cmdlet works in a file system drive. For information about the Get-ChildItem cmdlet in all drives,
     type "Get-Help Get-ChildItem -Path $null" or see Get-ChildItem at http://go.microsoft.com/fwlink/?LinkID=113308.


RELATED LINKS
    Online version: http://technet.microsoft.com/library/hh847897(v=wps.630).aspx
    Get-ChildItem (generic); http://go.microsoft.com/fwlink/?LinkID=113308
    FileSystem Provider
    Clear-Content
    Get-Content
    Get-ChildItem
    Get-Content
    Get-Item
    Remove-Item
    Set-Content
    Test-Path

REMARKS
    To see the examples, type: "get-help Get-ChildItem -examples".
    For more information, type: "get-help Get-ChildItem -detailed".
    For technical information, type: "get-help Get-ChildItem -full".
    For online help, type: "get-help Get-ChildItem -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Format-List"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Format-List                                        3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Format-List"

NAME
    Format-List

SYNOPSIS
    Formats the output as a list of properties in which each property appears on a new line.


SYNTAX
    Format-List [[-Property] <Object[]>] [-DisplayError] [-Expand {CoreOnly | EnumOnly | Both}] [-Force] [-GroupBy <Object>] [-InputObject <PSObject>] [-ShowError] [-Vi
    ew <String>] [<CommonParameters>]


DESCRIPTION
    The Format-List cmdlet formats the output of a command as a list of properties in which each property is displayed on a separate line. You can use Format-List to fo
    rmat and display all or selected properties of an object as a list (format-list *).

    Because more space is available for each item in a list than in a table, Windows PowerShell displays more properties of the object in the list, and the property val
    ues are less likely to be truncated.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821774
    Format-Custom
    Format-Hex
    Format-Table
    Format-Wide

REMARKS
    To see the examples, type: "get-help Format-List -examples".
    For more information, type: "get-help Format-List -detailed".
    For technical information, type: "get-help Format-List -full".
    For online help, type: "get-help Format-List -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ChildItem"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ChildItem                                      3.1.0.0    Microsoft.PowerShell.Management


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ChildItem"

NAME
    Get-ChildItem

SYNOPSIS
    Gets the files and folders in a file system drive.


SYNTAX
    Get-ChildItem [[-Filter] <String>] [-Attributes {ReadOnly | Hidden | System | Directory | Archive | Device | Normal | Temporary | SparseFile | ReparsePoint | Compre
    ssed | Offline | NotContentIndexed | Encrypted | IntegrityStream | NoScrubData}] [-Depth <UInt32>] [-Directory] [-Exclude <String[]>] [-File] [-Force] [-Hidden] [-I
    nclude <String[]>] -LiteralPath <String[]> [-Name] [-ReadOnly] [-Recurse] [-System] [-UseTransaction] [<CommonParameters>]

    Get-ChildItem [[-Path] <String[]>] [[-Filter] <String>] [-Attributes {ReadOnly | Hidden | System | Directory | Archive | Device | Normal | Temporary | SparseFile |
    ReparsePoint | Compressed | Offline | NotContentIndexed | Encrypted | IntegrityStream | NoScrubData}] [-Depth <UInt32>] [-Directory] [-Exclude <String[]>] [-File] [
    -Force] [-Hidden] [-Include <String[]>] [-Name] [-ReadOnly] [-Recurse] [-System] [-UseTransaction] [<CommonParameters>]

    Get-ChildItem [-Attributes <FileAttributes]>] [-Directory] [-File] [-Force] [-Hidden] [-ReadOnly] [-System] [-UseTransaction] [<CommonParameters>]


DESCRIPTION
    The Get-ChildItem cmdlet gets the items in one or more specified locations. If the item is a container, it gets the items inside the container, known as child items
    . You can use the Recurse parameter to get items in all child containers.

    A location can be a file system location, such as a directory, or a location exposed by a different Windows PowerShell provider, such as a registry hive or a certif
    icate store.
    In a file system drive, the Get-ChildItem cmdlet gets the directories, subdirectories, and files. In a file system directory, it gets subdirectories and files.

    By default, Get-ChildItem gets non-hidden items, but you can use the Directory, File, Hidden, ReadOnly, and System parameters to get only items with these attribute
    s. To create a complex attribute search, use the Attributes parameter. If you use these parameters, Get-ChildItem gets only the items that meet all search condition
    s, as though the parameters were connected by an AND operator.

    Note: This custom cmdlet help file explains how the Get-ChildItem cmdlet works in a file system drive. For information about the Get-ChildItem cmdlet in all drives,
     type "Get-Help Get-ChildItem -Path $null" or see Get-ChildItem at http://go.microsoft.com/fwlink/?LinkID=113308.


RELATED LINKS
    Online version: http://technet.microsoft.com/library/hh847897(v=wps.630).aspx
    Get-ChildItem (generic); http://go.microsoft.com/fwlink/?LinkID=113308
    FileSystem Provider
    Clear-Content
    Get-Content
    Get-ChildItem
    Get-Content
    Get-Item
    Remove-Item
    Set-Content
    Test-Path

REMARKS
    To see the examples, type: "get-help Get-ChildItem -examples".
    For more information, type: "get-help Get-ChildItem -detailed".
    For technical information, type: "get-help Get-ChildItem -full".
    For online help, type: "get-help Get-ChildItem -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-LocalGroup"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-LocalGroup                                     1.0.0.0    Microsoft.PowerShell.LocalAccounts


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-LocalGroup"

NAME
    Get-LocalGroup

SYNOPSIS
    Gets the local security groups.


SYNTAX
    Get-LocalGroup [[-Name] <String[]>] [<CommonParameters>]

    Get-LocalGroup [[-SID] <SecurityIdentifier[]>] [<CommonParameters>]


DESCRIPTION
    The Get-LocalGroup cmdlet gets local security groups in Security Account Manager. This cmdlet gets default built-in groups and local security groups that you create
    .


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=822511
    New-LocalGroup
    Remove-LocalGroup
    Rename-LocalGroup
    Set-LocalGroup

REMARKS
    To see the examples, type: "get-help Get-LocalGroup -examples".
    For more information, type: "get-help Get-LocalGroup -detailed".
    For technical information, type: "get-help Get-LocalGroup -full".
    For online help, type: "get-help Get-LocalGroup -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-LocalUser"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-LocalUser                                      1.0.0.0    Microsoft.PowerShell.LocalAccounts


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-LocalUser"

NAME
    Get-LocalUser

SYNOPSIS
    Gets local user accounts.


SYNTAX
    Get-LocalUser [[-Name] <String[]>] [<CommonParameters>]

    Get-LocalUser [[-SID] <SecurityIdentifier[]>] [<CommonParameters>]


DESCRIPTION
    The Get-LocalUser cmdlet gets local user accounts. This cmdlet gets default built-in user accounts, local user accounts that you created, and local accounts that yo
    u connected to Microsoft accounts.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=822514
    Disable-LocalUser
    Enable-LocalUser
    New-LocalUser
    Remove-LocalUser
    Rename-LocalUser
    Set-LocalUser

REMARKS
    To see the examples, type: "get-help Get-LocalUser -examples".
    For more information, type: "get-help Get-LocalUser -detailed".
    For technical information, type: "get-help Get-LocalUser -full".
    For online help, type: "get-help Get-LocalUser -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-File"

NAME
    Out-File

SYNOPSIS
    Sends output to a file.


SYNTAX
    Out-File [-FilePath] <String> [[-Encoding] {unknown | string | unicode | bigendianunicode | utf8 | utf7 | utf32 | ascii | default | oem}] [-Append] [-Confirm] [-For
    ce] [-InputObject <PSObject>] [-NoClobber] [-NoNewline] [-WhatIf] [-Width <Int32>] [<CommonParameters>]

    Out-File [[-Encoding] {unknown | string | unicode | bigendianunicode | utf8 | utf7 | utf32 | ascii | default | oem}] [-Append] [-Confirm] [-Force] [-InputObject <PS
    Object>] -LiteralPath <String> [-NoClobber] [-NoNewline] [-WhatIf] [-Width <Int32>] [<CommonParameters>]


DESCRIPTION
    The Out-File cmdlet sends output to a file. You can use this cmdlet instead of the redirection operator (>) when you need to use its parameters.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821839
    Out-GridView
    Out-Printer
    Out-String
    Tee-Object

REMARKS
    To see the examples, type: "get-help Out-File -examples".
    For more information, type: "get-help Out-File -detailed".
    For technical information, type: "get-help Out-File -full".
    For online help, type: "get-help Out-File -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-File"

NAME
    Out-File

SYNOPSIS
    Sends output to a file.


SYNTAX
    Out-File [-FilePath] <String> [[-Encoding] {unknown | string | unicode | bigendianunicode | utf8 | utf7 | utf32 | ascii | default | oem}] [-Append] [-Confirm] [-For
    ce] [-InputObject <PSObject>] [-NoClobber] [-NoNewline] [-WhatIf] [-Width <Int32>] [<CommonParameters>]

    Out-File [[-Encoding] {unknown | string | unicode | bigendianunicode | utf8 | utf7 | utf32 | ascii | default | oem}] [-Append] [-Confirm] [-Force] [-InputObject <PS
    Object>] -LiteralPath <String> [-NoClobber] [-NoNewline] [-WhatIf] [-Width <Int32>] [<CommonParameters>]


DESCRIPTION
    The Out-File cmdlet sends output to a file. You can use this cmdlet instead of the redirection operator (>) when you need to use its parameters.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821839
    Out-GridView
    Out-Printer
    Out-String
    Tee-Object

REMARKS
    To see the examples, type: "get-help Out-File -examples".
    For more information, type: "get-help Out-File -detailed".
    For technical information, type: "get-help Out-File -full".
    For online help, type: "get-help Out-File -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="ConvertTo-Json"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          ConvertTo-Json                                     3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="ConvertTo-Json"

NAME
    ConvertTo-Json

SYNOPSIS
    Converts an object to a JSON-formatted string.


SYNTAX
    ConvertTo-Json [-InputObject] <Object> [-Compress] [-Depth <Int32>] [<CommonParameters>]


DESCRIPTION
    The ConvertTo-Json cmdlet converts any object to a string in JavaScript Object Notation (JSON) format. The properties are converted to field names, the field values
     are converted to property values, and the methods are removed.

    You can then use the ConvertFrom-Json cmdlet to convert a JSON-formatted string to a JSON object, which is easily managed in Windows PowerShell.

    Many web sites use JSON instead of XML to serialize data for communication between servers and web-based apps.

    This cmdlet was introduced in Windows PowerShell 3.0.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821759
    ConvertFrom-Json
    Get-UICulture
    Invoke-WebRequest
    Invoke-RestMethod

REMARKS
    To see the examples, type: "get-help ConvertTo-Json -examples".
    For more information, type: "get-help ConvertTo-Json -detailed".
    For technical information, type: "get-help ConvertTo-Json -full".
    For online help, type: "get-help ConvertTo-Json -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-AppxPackage"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-AppxPackage                                    2.0.0.0    Appx


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-AppxPackage"

NAME
    Get-AppxPackage

SYNTAX
    Get-AppxPackage [[-Name] <string>] [[-Publisher] <string>] [-AllUsers] [-PackageTypeFilter {None | Main | Framework | Resource | Bundle | Xap | Optional}] [-User <s
    tring>] [-Volume <AppxVolume>]  [<CommonParameters>]


ALIASES
    None


REMARKS
    Get-Help cannot find the Help files for this cmdlet on this computer. It is displaying only partial help.
        -- To download and install Help files for the module that includes this cmdlet, use Update-Help.



PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-AppxPackage"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-AppxPackage                                    2.0.0.0    Appx


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-AppxPackage"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-AppxPackage                                    2.0.0.0    Appx


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-AppxPackage"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-AppxPackage                                    2.0.0.0    Appx


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-AppxPackage"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-AppxPackage                                    2.0.0.0    Appx


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ItemProperty"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ItemProperty                                   3.1.0.0    Microsoft.PowerShell.Management


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ItemProperty"

NAME
    Get-ItemProperty

SYNOPSIS
    Gets the properties of a specified item.


SYNTAX
    Get-ItemProperty [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -LiteralPath <String[]> [-UseTrans
    action] [<CommonParameters>]

    Get-ItemProperty [-Path] <String[]> [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-UseTransactio
    n] [<CommonParameters>]


DESCRIPTION
    The Get-ItemProperty cmdlet gets the properties of the specified items. For example, you can use this cmdlet to get the value of the LastAccessTime property of a fi
    le object. You can also use this cmdlet to view registry entries and their values.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821588
    Clear-ItemProperty
    Copy-ItemProperty
    Move-ItemProperty
    New-ItemProperty
    Remove-ItemProperty
    Rename-ItemProperty
    Set-ItemProperty

REMARKS
    To see the examples, type: "get-help Get-ItemProperty -examples".
    For more information, type: "get-help Get-ItemProperty -detailed".
    For technical information, type: "get-help Get-ItemProperty -full".
    For online help, type: "get-help Get-ItemProperty -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-WmiObject"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-WmiObject                                      3.1.0.0    Microsoft.PowerShell.Management


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-WmiObject"

NAME
    Get-WmiObject

SYNOPSIS
    Gets instances of WMI classes or information about the available classes.


SYNTAX
    Get-WmiObject [-Class] <String> [[-Property] <String[]>] [-Amended] [-AsJob] [-Authentication {Default | None | Connect | Call | Packet | PacketIntegrity | PacketPr
    ivacy | Unchanged}] [-Authority <String>] [-ComputerName <String[]>] [-Credential <PSCredential>] [-DirectRead] [-EnableAllPrivileges] [-Filter <String>] [-Imperson
    ation {Default | Anonymous | Identify | Impersonate | Delegate}] [-Locale <String>] [-Namespace <String>] [-ThrottleLimit <Int32>] [<CommonParameters>]

    Get-WmiObject [[-Class] <String>] [-Amended] [-AsJob] [-Authentication {Default | None | Connect | Call | Packet | PacketIntegrity | PacketPrivacy | Unchanged}] [-A
    uthority <String>] [-ComputerName <String[]>] [-Credential <PSCredential>] [-EnableAllPrivileges] [-Impersonation {Default | Anonymous | Identify | Impersonate | De
    legate}] [-List] [-Locale <String>] [-Namespace <String>] [-Recurse] [-ThrottleLimit <Int32>] [<CommonParameters>]

    Get-WmiObject [-Amended] [-AsJob] [-Authentication {Default | None | Connect | Call | Packet | PacketIntegrity | PacketPrivacy | Unchanged}] [-Authority <String>] [
    -ComputerName <String[]>] [-Credential <PSCredential>] [-DirectRead] [-EnableAllPrivileges] [-Impersonation {Default | Anonymous | Identify | Impersonate | Delegate
    }] [-Locale <String>] [-Namespace <String>] -Query <String> [-ThrottleLimit <Int32>] [<CommonParameters>]


DESCRIPTION
    Starting in Windows PowerShell 3.0, this cmdlet has been superseded by Get-CimInstancehttp://technet.microsoft.com/library/jj590758(v=wps.630).aspx.

    The Get-WmiObject cmdlet gets instances of Windows Management Instrumentation (WMI) classes or information about the available WMI classes. To specify a remote comp
    uter, use the ComputerName parameter. If the List parameter is specified, the cmdlet gets information about the WMI classes that are available in a specified namesp
    ace. If the Query parameter is specified, the cmdlet runs a WMI query language (WQL) statement.

    This cmdlet does not use Windows PowerShell remoting to perform remote operations. You can use the ComputerName parameter of the Get-WmiObject cmdlet even if your c
    omputer does not meet the requirements for Windows PowerShellremoting or is not configured for remoting in Windows PowerShell.

    Beginning in Windows PowerShell 3.0, the __Server property of the object that Get-WmiObject returns has a PSComputerName alias. This makes it easier to include the
    source computer name in output and reports.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821595
    Get-WSManInstance
    Invoke-WSManAction
    New-WSManInstance
    Remove-WSManInstance
    Invoke-WmiMethod
    Remove-WmiObject
    Set-WmiInstance

REMARKS
    To see the examples, type: "get-help Get-WmiObject -examples".
    For more information, type: "get-help Get-WmiObject -detailed".
    For technical information, type: "get-help Get-WmiObject -full".
    For online help, type: "get-help Get-WmiObject -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-WinEvent"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-WinEvent                                       3.0.0.0    Microsoft.PowerShell.Diagnostics


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-WinEvent"

NAME
    Get-WinEvent

SYNOPSIS
    Gets events from event logs and event tracing log files on local and remote computers.


SYNTAX
    Get-WinEvent [[-LogName] <String[]>] [-ComputerName <String>] [-Credential <PSCredential>] [-FilterXPath <String>] [-Force] [-MaxEvents <Int64>] [-Oldest] [<CommonP
    arameters>]

    Get-WinEvent [-ListProvider] <String[]> [-ComputerName <String>] [-Credential <PSCredential>] [<CommonParameters>]

    Get-WinEvent [-ProviderName] <String[]> [-ComputerName <String>] [-Credential <PSCredential>] [-FilterXPath <String>] [-Force] [-MaxEvents <Int64>] [-Oldest] [<Comm
    onParameters>]

    Get-WinEvent [-ListLog] <String[]> [-ComputerName <String>] [-Credential <PSCredential>] [-Force] [<CommonParameters>]

    Get-WinEvent [-FilterHashtable] <Hashtable[]> [-ComputerName <String>] [-Credential <PSCredential>] [-Force] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]

    Get-WinEvent [-FilterXml] <XmlDocument> [-ComputerName <String>] [-Credential <PSCredential>] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]

    Get-WinEvent [-Path] <String[]> [-Credential <PSCredential>] [-FilterXPath <String>] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]


DESCRIPTION
    The Get-WinEvent cmdlet gets events from event logs, including classic logs, such as the System and Application logs, and the event logs that are generated by the W
    indows Event Log technology introduced in Windows Vista. It also gets events in log files generated by Event Tracing for Windows (ETW).

    Without parameters, a Get-WinEvent command gets all the events from all the event logs on the computer. To interrupt the command, press CTRL + C.

    Get-WinEvent also lists event logs and event log providers. You can get events from selected logs or from logs generated by selected event providers. And, you can c
    ombine events from multiple sources in a single command. Get-WinEvent allows you to filter events by using XPath queries, structured XML queries, and simplified has
    h-table queries.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/p/?linkid=289626
    Get-Counter
    Get-EventLog
    about_EventLogs

REMARKS
    To see the examples, type: "get-help Get-WinEvent -examples".
    For more information, type: "get-help Get-WinEvent -detailed".
    For technical information, type: "get-help Get-WinEvent -full".
    For online help, type: "get-help Get-WinEvent -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-WinEvent"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-WinEvent                                       3.0.0.0    Microsoft.PowerShell.Diagnostics


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-WinEvent"

NAME
    Get-WinEvent

SYNOPSIS
    Gets events from event logs and event tracing log files on local and remote computers.


SYNTAX
    Get-WinEvent [[-LogName] <String[]>] [-ComputerName <String>] [-Credential <PSCredential>] [-FilterXPath <String>] [-Force] [-MaxEvents <Int64>] [-Oldest] [<CommonP
    arameters>]

    Get-WinEvent [-ListProvider] <String[]> [-ComputerName <String>] [-Credential <PSCredential>] [<CommonParameters>]

    Get-WinEvent [-ProviderName] <String[]> [-ComputerName <String>] [-Credential <PSCredential>] [-FilterXPath <String>] [-Force] [-MaxEvents <Int64>] [-Oldest] [<Comm
    onParameters>]

    Get-WinEvent [-ListLog] <String[]> [-ComputerName <String>] [-Credential <PSCredential>] [-Force] [<CommonParameters>]

    Get-WinEvent [-FilterHashtable] <Hashtable[]> [-ComputerName <String>] [-Credential <PSCredential>] [-Force] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]

    Get-WinEvent [-FilterXml] <XmlDocument> [-ComputerName <String>] [-Credential <PSCredential>] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]

    Get-WinEvent [-Path] <String[]> [-Credential <PSCredential>] [-FilterXPath <String>] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]


DESCRIPTION
    The Get-WinEvent cmdlet gets events from event logs, including classic logs, such as the System and Application logs, and the event logs that are generated by the W
    indows Event Log technology introduced in Windows Vista. It also gets events in log files generated by Event Tracing for Windows (ETW).

    Without parameters, a Get-WinEvent command gets all the events from all the event logs on the computer. To interrupt the command, press CTRL + C.

    Get-WinEvent also lists event logs and event log providers. You can get events from selected logs or from logs generated by selected event providers. And, you can c
    ombine events from multiple sources in a single command. Get-WinEvent allows you to filter events by using XPath queries, structured XML queries, and simplified has
    h-table queries.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/p/?linkid=289626
    Get-Counter
    Get-EventLog
    about_EventLogs

REMARKS
    To see the examples, type: "get-help Get-WinEvent -examples".
    For more information, type: "get-help Get-WinEvent -detailed".
    For technical information, type: "get-help Get-WinEvent -full".
    For online help, type: "get-help Get-WinEvent -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="New-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ItemProperty"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ItemProperty                                   3.1.0.0    Microsoft.PowerShell.Management


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ItemProperty"

NAME
    Get-ItemProperty

SYNOPSIS
    Gets the properties of a specified item.


SYNTAX
    Get-ItemProperty [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -LiteralPath <String[]> [-UseTrans
    action] [<CommonParameters>]

    Get-ItemProperty [-Path] <String[]> [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-UseTransactio
    n] [<CommonParameters>]


DESCRIPTION
    The Get-ItemProperty cmdlet gets the properties of the specified items. For example, you can use this cmdlet to get the value of the LastAccessTime property of a fi
    le object. You can also use this cmdlet to view registry entries and their values.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821588
    Clear-ItemProperty
    Copy-ItemProperty
    Move-ItemProperty
    New-ItemProperty
    Remove-ItemProperty
    Rename-ItemProperty
    Set-ItemProperty

REMARKS
    To see the examples, type: "get-help Get-ItemProperty -examples".
    For more information, type: "get-help Get-ItemProperty -detailed".
    For technical information, type: "get-help Get-ItemProperty -full".
    For online help, type: "get-help Get-ItemProperty -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="gethotfixes"
PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="add-Member"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Add-Member                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Add-Member"

NAME
    Add-Member

SYNOPSIS
    Adds custom properties and methods to an instance of a Windows PowerShell object.


SYNTAX
    Add-Member [-MemberType] {AliasProperty | CodeProperty | Property | NoteProperty | ScriptProperty | Properties | PropertySet | Method | CodeMethod | ScriptMethod |
    Methods | ParameterizedProperty | MemberSet | Event | Dynamic | All} [-Name] <String> [[-Value] <Object>] [[-SecondValue] <Object>] [-Force] -InputObject <PSObject>
     [-PassThru] [-TypeName <String>] [<CommonParameters>]

    Add-Member [-NotePropertyName] <String> [-NotePropertyValue] <Object> [-Force] -InputObject <PSObject> [-PassThru] [-TypeName <String>] [<CommonParameters>]

    Add-Member [-NotePropertyMembers] <IDictionary> [-Force] -InputObject <PSObject> [-PassThru] [-TypeName <String>] [<CommonParameters>]

    Add-Member -InputObject <PSObject> [-PassThru] -TypeName <String> [<CommonParameters>]


DESCRIPTION
    The Add-Member cmdlet lets you add members (properties and methods) to an instance of a Windows PowerShell object. For instance, you can add a NoteProperty member t
    hat contains a description of the object or a ScriptMethod member that runs a script to change the object.

    To use Add-Member , pipe the object to Add-Member , or use the InputObject parameter to specify the object. Use the MemberType parameter to specify the type of memb
    er that you want to add, use the Name parameter to assign a name to the new member, and use the Value parameter to set the value of the member.

    The properties and methods that you add are added only to the particular instance of the object that you specify. Add-Member does not change the object type. To cre
    ate a new object type, use the Add-Type cmdlet. You can also use the Export-Clixml cmdlet to save the instance of the object, including the additional members, in a
     file. Then you can use the Import-Clixml cmdlet to re-create the instance of the object from the information that is stored in the exported file.

    Beginning in Windows PowerShell 3.0, Add-Member has new features that make it easier to add note properties to objects. You can use the NotePropertyName and NotePro
    pertyValue parameters to define a note property or use the NotePropertyMembers parameter, which takes a hash table of note property names and values.

    Also, beginning in Windows PowerShell 3.0, the PassThru parameter, which generates an output object, is needed less frequently. Add-Member now adds the new members
    directly to the input object of more types. For more information, see the PassThru parameter description.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821748
    Export-Clixml
    Get-Member
    Import-Clixml
    New-Object

REMARKS
    To see the examples, type: "get-help Add-Member -examples".
    For more information, type: "get-help Add-Member -detailed".
    For technical information, type: "get-help Add-Member -full".
    For online help, type: "get-help Add-Member -online"


