**********************
Windows PowerShell transcript start
Start time: 20170921104248
Username: DESKTOP-TBE27PS\lukas
RunAs User: DESKTOP-TBE27PS\lukas
Configuration Name: 
Machine: DESKTOP-TBE27PS (Microsoft Windows NT 10.0.16291.0)
Host Application: C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command & 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\scripts\Start-EditorServices.ps1' -EditorServicesVersion '1.4.1' -HostName 'Visual Studio Code Host' -HostProfileId 'Microsoft.VSCode' -HostVersion '1.4.3' -AdditionalModules @('PowerShellEditorServices.VSCode') -BundledModulesPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\modules' -EnableConsoleRepl -LogLevel 'Normal' -LogPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\logs\1505983357-66b69a58-33bd-4009-ab1c-1fa0a6a6302c1505983354546\EditorServices.log' -SessionDetailsPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\sessions\PSES-VSCode-5996-907557' -FeatureFlags @()
Process ID: 4656
PSVersion: 5.1.16291.0
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.16291.0
BuildVersion: 10.0.16291.0
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is ./transcript2017-09-21-10-42-48.txt
09/21/2017 10:42:48 - Nacitani json konfiguracniho souboru
09/21/2017 10:42:54 - Dokonce nacitani json konfiguracniho souboru
09/21/2017 10:42:54 - zjisteni zda je uzivatel admin
WARNING: Ujistete se ze spoustite AVAS jako administrator! Provedte spusteni jako administrator nebo nemusi vse fungovat korektne!!
09/21/2017 10:42:54 - ukonceno zjistovani zda je uzivatel admin
09/21/2017 10:42:54 - uzivatel je admin pokracuje dalsi spusteni skriptu
09/21/2017 10:42:54 - Nacitam GUI
You cannot call a method on a null-valued expression.
At D:\SICZ\avas\AVAS_LuKA\avas_LuKa.ps1:911 char:1
+ $mtbn_app.Add_Click({
+ ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull
You cannot call a method on a null-valued expression.
At D:\SICZ\avas\AVAS_LuKA\avas_LuKa.ps1:911 char:1
+ $mtbn_app.Add_Click({
+ ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull

Cancel
PS>@{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      4656
computerName                   DESKTOP-TBE27PS
instanceId                     c6b31aae-e363-4205-8249-7b7e3ae7860a


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-WinEvent"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-WinEvent                                       3.0.0.0    Microsoft.PowerShell.Diagnostics


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-WinEvent"

NAME
    Get-WinEvent

SYNOPSIS
    Gets events from event logs and event tracing log files on local and remote computers.


SYNTAX
    Get-WinEvent [[-LogName] <String[]>] [-ComputerName <String>] [-Credential <PSCredential>] [-FilterXPath <String>] [-Force] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]

    Get-WinEvent [-ListProvider] <String[]> [-ComputerName <String>] [-Credential <PSCredential>] [<CommonParameters>]

    Get-WinEvent [-ProviderName] <String[]> [-ComputerName <String>] [-Credential <PSCredential>] [-FilterXPath <String>] [-Force] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]

    Get-WinEvent [-ListLog] <String[]> [-ComputerName <String>] [-Credential <PSCredential>] [-Force] [<CommonParameters>]

    Get-WinEvent [-FilterHashtable] <Hashtable[]> [-ComputerName <String>] [-Credential <PSCredential>] [-Force] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]

    Get-WinEvent [-FilterXml] <XmlDocument> [-ComputerName <String>] [-Credential <PSCredential>] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]

    Get-WinEvent [-Path] <String[]> [-Credential <PSCredential>] [-FilterXPath <String>] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]


DESCRIPTION
    The Get-WinEvent cmdlet gets events from event logs, including classic logs, such as the System and Application logs, and the event logs that are generated by the Windows Event Log technology i
    ntroduced in Windows Vista. It also gets events in log files generated by Event Tracing for Windows (ETW).

    Without parameters, a Get-WinEvent command gets all the events from all the event logs on the computer. To interrupt the command, press CTRL + C.

    Get-WinEvent also lists event logs and event log providers. You can get events from selected logs or from logs generated by selected event providers. And, you can combine events from multiple s
    ources in a single command. Get-WinEvent allows you to filter events by using XPath queries, structured XML queries, and simplified hash-table queries.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/p/?linkid=289626
    Get-Counter
    Get-EventLog
    about_EventLogs

REMARKS
    To see the examples, type: "get-help Get-WinEvent -examples".
    For more information, type: "get-help Get-WinEvent -detailed".
    For technical information, type: "get-help Get-WinEvent -full".
    For online help, type: "get-help Get-WinEvent -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-WinEvent"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-WinEvent                                       3.0.0.0    Microsoft.PowerShell.Diagnostics


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-WinEvent"

NAME
    Get-WinEvent

SYNOPSIS
    Gets events from event logs and event tracing log files on local and remote computers.


SYNTAX
    Get-WinEvent [[-LogName] <String[]>] [-ComputerName <String>] [-Credential <PSCredential>] [-FilterXPath <String>] [-Force] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]

    Get-WinEvent [-ListProvider] <String[]> [-ComputerName <String>] [-Credential <PSCredential>] [<CommonParameters>]

    Get-WinEvent [-ProviderName] <String[]> [-ComputerName <String>] [-Credential <PSCredential>] [-FilterXPath <String>] [-Force] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]

    Get-WinEvent [-ListLog] <String[]> [-ComputerName <String>] [-Credential <PSCredential>] [-Force] [<CommonParameters>]

    Get-WinEvent [-FilterHashtable] <Hashtable[]> [-ComputerName <String>] [-Credential <PSCredential>] [-Force] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]

    Get-WinEvent [-FilterXml] <XmlDocument> [-ComputerName <String>] [-Credential <PSCredential>] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]

    Get-WinEvent [-Path] <String[]> [-Credential <PSCredential>] [-FilterXPath <String>] [-MaxEvents <Int64>] [-Oldest] [<CommonParameters>]


DESCRIPTION
    The Get-WinEvent cmdlet gets events from event logs, including classic logs, such as the System and Application logs, and the event logs that are generated by the Windows Event Log technology i
    ntroduced in Windows Vista. It also gets events in log files generated by Event Tracing for Windows (ETW).

    Without parameters, a Get-WinEvent command gets all the events from all the event logs on the computer. To interrupt the command, press CTRL + C.

    Get-WinEvent also lists event logs and event log providers. You can get events from selected logs or from logs generated by selected event providers. And, you can combine events from multiple s
    ources in a single command. Get-WinEvent allows you to filter events by using XPath queries, structured XML queries, and simplified hash-table queries.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/p/?linkid=289626
    Get-Counter
    Get-EventLog
    about_EventLogs

REMARKS
    To see the examples, type: "get-help Get-WinEvent -examples".
    For more information, type: "get-help Get-WinEvent -detailed".
    For technical information, type: "get-help Get-WinEvent -full".
    For online help, type: "get-help Get-WinEvent -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ScheduledTask"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Get-ScheduledTask                                  1.0.0.0    ScheduledTasks


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ScheduledTask"

NAME
    Get-ScheduledTask

SYNOPSIS
    Gets the task definition object of a scheduled task that is registered on the local computer.


SYNTAX
    Get-ScheduledTask [[-TaskName] <String[]>] [[-TaskPath] <String[]>] [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-ScheduledTask cmdlet gets the task definition object of a scheduled task that is registered on a computer.



RELATED LINKS
    Online Version:
    Disable-ScheduledTask
    Enable-ScheduledTask
    Export-ScheduledTask
    New-ScheduledTask
    Register-ScheduledTask
    Set-ScheduledTask
    Start-ScheduledTask
    Stop-ScheduledTask
    Unregister-ScheduledTask

REMARKS
    To see the examples, type: "get-help Get-ScheduledTask -examples".
    For more information, type: "get-help Get-ScheduledTask -detailed".
    For technical information, type: "get-help Get-ScheduledTask -full".
    For online help, type: "get-help Get-ScheduledTask -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ItemProperty"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ItemProperty                                   3.1.0.0    Microsoft.PowerShell.Management


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ItemProperty"

NAME
    Get-ItemProperty

SYNOPSIS
    Gets the properties of a specified item.


SYNTAX
    Get-ItemProperty [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -LiteralPath <String[]> [-UseTransaction] [<CommonParameters>]

    Get-ItemProperty [-Path] <String[]> [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-UseTransaction] [<CommonParameters>]


DESCRIPTION
    The Get-ItemProperty cmdlet gets the properties of the specified items. For example, you can use this cmdlet to get the value of the LastAccessTime property of a file object. You can also use t
    his cmdlet to view registry entries and their values.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821588
    Clear-ItemProperty
    Copy-ItemProperty
    Move-ItemProperty
    New-ItemProperty
    Remove-ItemProperty
    Rename-ItemProperty
    Set-ItemProperty

REMARKS
    To see the examples, type: "get-help Get-ItemProperty -examples".
    For more information, type: "get-help Get-ItemProperty -detailed".
    For technical information, type: "get-help Get-ItemProperty -full".
    For online help, type: "get-help Get-ItemProperty -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ItemProperty"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ItemProperty                                   3.1.0.0    Microsoft.PowerShell.Management


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ItemProperty"

NAME
    Get-ItemProperty

SYNOPSIS
    Gets the properties of a specified item.


SYNTAX
    Get-ItemProperty [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -LiteralPath <String[]> [-UseTransaction] [<CommonParameters>]

    Get-ItemProperty [-Path] <String[]> [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-UseTransaction] [<CommonParameters>]


DESCRIPTION
    The Get-ItemProperty cmdlet gets the properties of the specified items. For example, you can use this cmdlet to get the value of the LastAccessTime property of a file object. You can also use t
    his cmdlet to view registry entries and their values.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821588
    Clear-ItemProperty
    Copy-ItemProperty
    Move-ItemProperty
    New-ItemProperty
    Remove-ItemProperty
    Rename-ItemProperty
    Set-ItemProperty

REMARKS
    To see the examples, type: "get-help Get-ItemProperty -examples".
    For more information, type: "get-help Get-ItemProperty -detailed".
    For technical information, type: "get-help Get-ItemProperty -full".
    For online help, type: "get-help Get-ItemProperty -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Select-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Select-Object                                      3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Select-Object"

NAME
    Select-Object

SYNOPSIS
    Selects objects or object properties.


SYNTAX
    Select-Object [[-Property] <Object[]>] [-ExcludeProperty <String[]>] [-ExpandProperty <String>] [-First <Int32>] [-InputObject <PSObject>] [-Last <Int32>] [-Skip <Int32>] [-Unique] [-Wait] [<Co
    mmonParameters>]

    Select-Object [[-Property] <Object[]>] [-ExcludeProperty <String[]>] [-ExpandProperty <String>] [-InputObject <PSObject>] [-SkipLast <Int32>] [-Unique] [<CommonParameters>]

    Select-Object [-Index <Int32[]>] [-InputObject <PSObject>] [-Unique] [-Wait] [<CommonParameters>]


DESCRIPTION
    The Select-Object cmdlet selects specified properties of an object or set of objects. It can also select unique objects, a specified number of objects, or objects in a specified position in an
    array.

    To select objects from a collection, use the First , Last , Unique , Skip , and Index parameters. To select object properties, use the Property parameter. When you select properties, Select-Obj
    ect returns new objects that have only the specified properties.

    Beginning in Windows PowerShell 3.0, Select-Object includes an optimization feature that prevents commands from creating and processing objects that are not used. When you include a Select-Obje
    ct command with the First or Index parameter in a command pipeline, Windows PowerShell stops the command that generates the objects as soon as the selected number of objects is generated, even
    when the command that generates the objects appears before the Select-Object command in the pipeline. To turn off this optimizing behavior, use the Wait parameter.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821852
    Group-Object
    Sort-Object

REMARKS
    To see the examples, type: "get-help Select-Object -examples".
    For more information, type: "get-help Select-Object -detailed".
    For technical information, type: "get-help Select-Object -full".
    For online help, type: "get-help Select-Object -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Select-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Select-Object                                      3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Select-Object"

NAME
    Select-Object

SYNOPSIS
    Selects objects or object properties.


SYNTAX
    Select-Object [[-Property] <Object[]>] [-ExcludeProperty <String[]>] [-ExpandProperty <String>] [-First <Int32>] [-InputObject <PSObject>] [-Last <Int32>] [-Skip <Int32>] [-Unique] [-Wait] [<Co
    mmonParameters>]

    Select-Object [[-Property] <Object[]>] [-ExcludeProperty <String[]>] [-ExpandProperty <String>] [-InputObject <PSObject>] [-SkipLast <Int32>] [-Unique] [<CommonParameters>]

    Select-Object [-Index <Int32[]>] [-InputObject <PSObject>] [-Unique] [-Wait] [<CommonParameters>]


DESCRIPTION
    The Select-Object cmdlet selects specified properties of an object or set of objects. It can also select unique objects, a specified number of objects, or objects in a specified position in an
    array.

    To select objects from a collection, use the First , Last , Unique , Skip , and Index parameters. To select object properties, use the Property parameter. When you select properties, Select-Obj
    ect returns new objects that have only the specified properties.

    Beginning in Windows PowerShell 3.0, Select-Object includes an optimization feature that prevents commands from creating and processing objects that are not used. When you include a Select-Obje
    ct command with the First or Index parameter in a command pipeline, Windows PowerShell stops the command that generates the objects as soon as the selected number of objects is generated, even
    when the command that generates the objects appears before the Select-Object command in the pipeline. To turn off this optimizing behavior, use the Wait parameter.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821852
    Group-Object
    Sort-Object

REMARKS
    To see the examples, type: "get-help Select-Object -examples".
    For more information, type: "get-help Select-Object -detailed".
    For technical information, type: "get-help Select-Object -full".
    For online help, type: "get-help Select-Object -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Content"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Content                                        3.1.0.0    Microsoft.PowerShell.Management


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Content"

NAME
    Get-Content

SYNOPSIS
    Gets the contents of a file.


SYNTAX
    Get-Content [-Credential <PSCredential>] [-Delimiter <String>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Default | Oem | BigEndianUTF32}]
    [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-Raw] [-ReadCount <Int64>] [-Stream <String>] [-Tail <Int32>] [-TotalCount <Int64>] [-UseTransac
    tion] [-Wait] [<CommonParameters>]

    Get-Content [-Path] <String[]> [-Credential <PSCredential>] [-Delimiter <String>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Default | Oem
    | BigEndianUTF32}] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-Raw] [-ReadCount <Int64>] [-Stream <String>] [-Tail <Int32>] [-TotalCount <Int64>] [-UseTransaction]
     [-Wait] [<CommonParameters>]

    Get-Content [-Delimiter <string>] [-Encoding {Unknown | String | Unicode | Byte | BigEndianUnicode | UTF8 | UTF7 | UTF32 | Ascii | Default | Oem}] [-Force] [-Raw <switch>] [-Stream <string>] [-
    Wait] [-UseTransaction] [<CommonParameters>]


DESCRIPTION
    The Get-Content cmdlet gets the content of the item at the location specified by the path, such as the text in a file. It reads the content one line at a time and returns a collection of object
    s, each of which represents a line of content.

    Beginning in Windows PowerShell 3.0, this cmdlet can also get a specified number of lines from the beginning or end of an item.
    In file system drives, you can use the the Get-Content cmdlet to get content that you display at the command line, save in a variable for processing, or write to another file. It is not valid o
    n folders.

    Note: This custom cmdlet help file explains how the Get-Content cmdlet works in a file system drive. For information about the Get-Content cmdlet in all drives, type "Get-Help Get-Content -Path
     $null" or see Get-Content at http://go.microsoft.com/fwlink/?LinkID=113310.


RELATED LINKS
    Online version: http://technet.microsoft.com/library/hh847788(v=wps.630).aspx
    Get-Content (generic); http://go.microsoft.com/fwlink/?LinkID=113310
    FileSystem Provider
    Clear-Content
    Get-Content
    Get-ChildItem
    Get-Content
    Get-Item
    Remove-Item
    Set-Content
    Test-Path

REMARKS
    To see the examples, type: "get-help Get-Content -examples".
    For more information, type: "get-help Get-Content -detailed".
    For technical information, type: "get-help Get-Content -full".
    For online help, type: "get-help Get-Content -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Second <Int32
    >] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Second <Int32>] [-UFormat <Strin
    g>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX formats. You can use Get-Date
     to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Second <Int32
    >] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Second <Int32>] [-UFormat <Strin
    g>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX formats. You can use Get-Date
     to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Read-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Read-Host                                          3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="o"
PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="odbcad32.exe"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Application     odbcad32.exe                                       10.0.16... C:\WINDOWS\system32\odbcad32.exe


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-CurrentFile"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Out-CurrentFile                                    0.1.1      PowerShellEditorServices.Commands


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-CurrentFile"

NAME
    Out-CurrentFile

SYNOPSIS
    Sends the output through Out-String to the current open editor file.


SYNTAX
    Out-CurrentFile [-InputObject] <Object> [<CommonParameters>]


DESCRIPTION
    The Out-CurrentFile cmdlet sends output through Out-String to the current open editor file.


RELATED LINKS
    Online Version: https://github.com/PowerShell/PowerShellEditorServices/tree/master/module/docs/Out-CurrentFile.md

REMARKS
    To see the examples, type: "get-help Out-CurrentFile -examples".
    For more information, type: "get-help Out-CurrentFile -detailed".
    For technical information, type: "get-help Out-CurrentFile -full".
    For online help, type: "get-help Out-CurrentFile -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-CurrentFile"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Out-CurrentFile                                    0.1.1      PowerShellEditorServices.Commands


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-CurrentFile"

NAME
    Out-CurrentFile

SYNOPSIS
    Sends the output through Out-String to the current open editor file.


SYNTAX
    Out-CurrentFile [-InputObject] <Object> [<CommonParameters>]


DESCRIPTION
    The Out-CurrentFile cmdlet sends output through Out-String to the current open editor file.


RELATED LINKS
    Online Version: https://github.com/PowerShell/PowerShellEditorServices/tree/master/module/docs/Out-CurrentFile.md

REMARKS
    To see the examples, type: "get-help Out-CurrentFile -examples".
    For more information, type: "get-help Out-CurrentFile -detailed".
    For technical information, type: "get-help Out-CurrentFile -full".
    For online help, type: "get-help Out-CurrentFile -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-Default"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-Default                                        3.0.0.0    Microsoft.PowerShell.Core


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-Default"

NAME
    Out-Default

SYNOPSIS
    Sends the output to the default formatter and to the default output cmdlet.


SYNTAX
    Out-Default [-InputObject <PSObject>] [-Transcript] [<CommonParameters>]


DESCRIPTION
    The Out-Default cmdlet sends output to the default formatter and the default output cmdlet. This cmdlet has no effect on the formatting or output of Windows PowerShell commands. It is a placeho
    lder that lets you write your own Out-Default function or cmdlet.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821502

REMARKS
    To see the examples, type: "get-help Out-Default -examples".
    For more information, type: "get-help Out-Default -detailed".
    For technical information, type: "get-help Out-Default -full".
    For online help, type: "get-help Out-Default -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Out-File"

NAME
    Out-File

SYNOPSIS
    Sends output to a file.


SYNTAX
    Out-File [-FilePath] <String> [[-Encoding] {unknown | string | unicode | bigendianunicode | utf8 | utf7 | utf32 | ascii | default | oem}] [-Append] [-Confirm] [-Force] [-InputObject <PSObject>]
     [-NoClobber] [-NoNewline] [-WhatIf] [-Width <Int32>] [<CommonParameters>]

    Out-File [[-Encoding] {unknown | string | unicode | bigendianunicode | utf8 | utf7 | utf32 | ascii | default | oem}] [-Append] [-Confirm] [-Force] [-InputObject <PSObject>] -LiteralPath <String
    > [-NoClobber] [-NoNewline] [-WhatIf] [-Width <Int32>] [<CommonParameters>]


DESCRIPTION
    The Out-File cmdlet sends output to a file. You can use this cmdlet instead of the redirection operator (>) when you need to use its parameters.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821839
    Out-GridView
    Out-Printer
    Out-String
    Tee-Object

REMARKS
    To see the examples, type: "get-help Out-File -examples".
    For more information, type: "get-help Out-File -detailed".
    For technical information, type: "get-help Out-File -full".
    For online help, type: "get-help Out-File -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Out-File"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Out-File                                           3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="$env:COMPUTERNAME"
PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="$env:COMPUTERNAME"
PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-CimInstance"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-CimInstance                                    1.0.0.0    CimCmdlets


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-CimInstance"

NAME
    Get-CimInstance

SYNOPSIS
    Gets the CIM instances of a class from a CIM server.


SYNTAX
    Get-CimInstance [-ClassName] <String> [-ComputerName <String[]>] [-Filter <String>] [-KeyOnly] [-Namespace <String>] [-OperationTimeoutSec <UInt32>] [-Property <String[]>] [-QueryDialect <Strin
    g>] [-Shallow] [<CommonParameters>]

    Get-CimInstance [-Namespace <String>] [-OperationTimeoutSec <UInt32>] [-QueryDialect <String>] [-ResourceUri <Uri>] [-Shallow] -CimSession <CimSession[]> -Query <String> [<CommonParameters>]

    Get-CimInstance [-InputObject] <CimInstance> [-OperationTimeoutSec <UInt32>] [-ResourceUri <Uri>] -CimSession <CimSession[]> [<CommonParameters>]

    Get-CimInstance [-ClassName] <String> [-Filter <String>] [-KeyOnly] [-Namespace <String>] [-OperationTimeoutSec <UInt32>] [-Property <String[]>] [-QueryDialect <String>] [-Shallow] -CimSession
    <CimSession[]> [<CommonParameters>]

    Get-CimInstance [-Filter <String>] [-KeyOnly] [-Namespace <String>] [-OperationTimeoutSec <UInt32>] [-Property <String[]>] [-Shallow] -CimSession <CimSession[]> -ResourceUri <Uri> [<CommonParam
    eters>]

    Get-CimInstance [-ComputerName <String[]>] [-Filter <String>] [-KeyOnly] [-Namespace <String>] [-OperationTimeoutSec <UInt32>] [-Property <String[]>] [-Shallow] -ResourceUri <Uri> [<CommonParam
    eters>]

    Get-CimInstance [-ComputerName <String[]>] [-Namespace <String>] [-OperationTimeoutSec <UInt32>] [-QueryDialect <String>] [-ResourceUri <Uri>] [-Shallow] -Query <String> [<CommonParameters>]

    Get-CimInstance [-InputObject] <CimInstance> [-ComputerName <String[]>] [-OperationTimeoutSec <UInt32>] [-ResourceUri <Uri>] [<CommonParameters>]


DESCRIPTION
    The Get-CimInstance cmdlet gets the Common Information Model (CIM) instances of a class from a CIM server. You can specify either the class name or a query for this cmdlet.

    This cmdlet returns one or more CIM instance objects representing a snapshot of the CIM instances present on the CIM server.

    If the InputObject parameter is not specified, the cmdlet works in one of the following ways:

    --If neither the ComputerName parameter nor the CimSession parameter is specified, then this cmdlet works on local Windows Management Instrumentation (WMI) using a Component Object Model (COM)
    session.
    --If either the ComputerName parameter or the CimSession parameter is specified, then this cmdlet works against the CIM server specified by either the ComputerName parameter or the CimSession p
    arameter.

    If the InputObject parameter is specified, the cmdlet works in one of the following ways:

    --If neither the ComputerName parameter nor the CimSession parameter is specified, then this cmdlet uses the CIM session or computer name from the input object.
    --If the either the ComputerName parameter or the CimSession parameter is specified, then this cmdlet uses the either the CimSession parameter value or ComputerName parameter value. Note: This
    is not very common.






RELATED LINKS
    Online Version:
    Get-CimAssociatedInstance
    Get-CimClass
    Invoke-CimMethod
    New-CimInstance
    Register-CimIndicationEvent
    Remove-CimInstance
    Set-CimInstance

REMARKS
    To see the examples, type: "get-help Get-CimInstance -examples".
    For more information, type: "get-help Get-CimInstance -detailed".
    For technical information, type: "get-help Get-CimInstance -full".
    For online help, type: "get-help Get-CimInstance -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ExecutionPolicy"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ExecutionPolicy                                3.0.0.0    Microsoft.PowerShell.Security


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ExecutionPolicy"

NAME
    Get-ExecutionPolicy

SYNOPSIS
    Gets the execution policies for the current session.


SYNTAX
    Get-ExecutionPolicy [[-Scope] {Process | CurrentUser | LocalMachine | UserPolicy | MachinePolicy}] [-List] [<CommonParameters>]


DESCRIPTION
    The Get-ExecutionPolicy cmdlet gets the execution policies for the current session.

    The execution policy is determined by execution policies that you set by using Set-ExecutionPolicy and the Group Policy settings for the Windows PowerShell execution policy. The default value i
    s Restricted.

    Without parameters, Get-ExecutionPolicy gets the execution policy that is effective in the session. You can use the List parameter to get all execution policies that affect the session or the S
    cope parameter to get the execution policy for a particular scope.

    For more information, see about_Execution_Policies (http://go.microsoft.com/fwlink/?LinkID=135170).


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821714
    Get-AuthenticodeSignature
    Set-AuthenticodeSignature
    Set-ExecutionPolicy

REMARKS
    To see the examples, type: "get-help Get-ExecutionPolicy -examples".
    For more information, type: "get-help Get-ExecutionPolicy -detailed".
    For technical information, type: "get-help Get-ExecutionPolicy -full".
    For online help, type: "get-help Get-ExecutionPolicy -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Test-Path"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Test-Path                                          3.1.0.0    Microsoft.PowerShell.Management


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Test-Path"

NAME
    Test-Path

SYNOPSIS
    Determines whether all elements of a file or directory path exist.


SYNTAX
    Test-Path [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-IsValid] -LiteralPath <String[]> [-NewerThan <DateTime>] [-OlderThan <DateTime>] [-PathTy
    pe {Any | Container | Leaf}] [-UseTransaction] [<CommonParameters>]

    Test-Path [-Path] <String[]> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-IsValid] [-NewerThan <DateTime>] [-OlderThan <DateTime>] [-PathType {A
    ny | Container | Leaf}] [-UseTransaction] [<CommonParameters>]

    Test-Path [-NewerThan <DateTime>] [-OlderThan <DateTime>] [<CommonParameters>]


DESCRIPTION
    The Test-Path cmdlet determines whether all elements of the path exist. It returns $True if all elements exist and $False if any are missing. It can also tell whether the path syntax is valid a
    nd whether the path leads to a container or a terminal or leaf element.
    In a file system drive, Test-Path can tell whether a path is valid, whether all elements of the path exist, or report whether a path leads to a file or a directory. It can also tell whether a f
    ile was changed before or after a particular date.

    Note: This custom cmdlet help file explains how the Test-Path cmdlet works in a file system drive. For information about the Test-Path cmdlet in all drives, type "Get-Help Test-Path -Path $null
    " or see Test-Path at http://go.microsoft.com/fwlink/?LinkID=113418.


RELATED LINKS
    Online version: http://technet.microsoft.com/library/hh847828(v=wps.630).aspx
    Test-Path (generic); http://go.microsoft.com/fwlink/?LinkID=113418
    FileSystem Provider
    Clear-Content
    Get-Content
    Get-ChildItem
    Get-Content
    Get-Item
    Remove-Item
    Set-Content
    Test-Path

REMARKS
    To see the examples, type: "get-help Test-Path -examples".
    For more information, type: "get-help Test-Path -detailed".
    For technical information, type: "get-help Test-Path -full".
    For online help, type: "get-help Test-Path -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Test-Path"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Test-Path                                          3.1.0.0    Microsoft.PowerShell.Management


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Test-Path"

NAME
    Test-Path

SYNOPSIS
    Determines whether all elements of a file or directory path exist.


SYNTAX
    Test-Path [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-IsValid] -LiteralPath <String[]> [-NewerThan <DateTime>] [-OlderThan <DateTime>] [-PathTy
    pe {Any | Container | Leaf}] [-UseTransaction] [<CommonParameters>]

    Test-Path [-Path] <String[]> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-IsValid] [-NewerThan <DateTime>] [-OlderThan <DateTime>] [-PathType {A
    ny | Container | Leaf}] [-UseTransaction] [<CommonParameters>]

    Test-Path [-NewerThan <DateTime>] [-OlderThan <DateTime>] [<CommonParameters>]


DESCRIPTION
    The Test-Path cmdlet determines whether all elements of the path exist. It returns $True if all elements exist and $False if any are missing. It can also tell whether the path syntax is valid a
    nd whether the path leads to a container or a terminal or leaf element.
    In a file system drive, Test-Path can tell whether a path is valid, whether all elements of the path exist, or report whether a path leads to a file or a directory. It can also tell whether a f
    ile was changed before or after a particular date.

    Note: This custom cmdlet help file explains how the Test-Path cmdlet works in a file system drive. For information about the Test-Path cmdlet in all drives, type "Get-Help Test-Path -Path $null
    " or see Test-Path at http://go.microsoft.com/fwlink/?LinkID=113418.


RELATED LINKS
    Online version: http://technet.microsoft.com/library/hh847828(v=wps.630).aspx
    Test-Path (generic); http://go.microsoft.com/fwlink/?LinkID=113418
    FileSystem Provider
    Clear-Content
    Get-Content
    Get-ChildItem
    Get-Content
    Get-Item
    Remove-Item
    Set-Content
    Test-Path

REMARKS
    To see the examples, type: "get-help Test-Path -examples".
    For more information, type: "get-help Test-Path -detailed".
    For technical information, type: "get-help Test-Path -full".
    For online help, type: "get-help Test-Path -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ExecutionPolicy"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ExecutionPolicy                                3.0.0.0    Microsoft.PowerShell.Security


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ExecutionPolicy"

NAME
    Get-ExecutionPolicy

SYNOPSIS
    Gets the execution policies for the current session.


SYNTAX
    Get-ExecutionPolicy [[-Scope] {Process | CurrentUser | LocalMachine | UserPolicy | MachinePolicy}] [-List] [<CommonParameters>]


DESCRIPTION
    The Get-ExecutionPolicy cmdlet gets the execution policies for the current session.

    The execution policy is determined by execution policies that you set by using Set-ExecutionPolicy and the Group Policy settings for the Windows PowerShell execution policy. The default value i
    s Restricted.

    Without parameters, Get-ExecutionPolicy gets the execution policy that is effective in the session. You can use the List parameter to get all execution policies that affect the session or the S
    cope parameter to get the execution policy for a particular scope.

    For more information, see about_Execution_Policies (http://go.microsoft.com/fwlink/?LinkID=135170).


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821714
    Get-AuthenticodeSignature
    Set-AuthenticodeSignature
    Set-ExecutionPolicy

REMARKS
    To see the examples, type: "get-help Get-ExecutionPolicy -examples".
    For more information, type: "get-help Get-ExecutionPolicy -detailed".
    For technical information, type: "get-help Get-ExecutionPolicy -full".
    For online help, type: "get-help Get-ExecutionPolicy -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ItemProperty"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ItemProperty                                   3.1.0.0    Microsoft.PowerShell.Management


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ItemProperty"

NAME
    Get-ItemProperty

SYNOPSIS
    Gets the properties of a specified item.


SYNTAX
    Get-ItemProperty [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -LiteralPath <String[]> [-UseTransaction] [<CommonParameters>]

    Get-ItemProperty [-Path] <String[]> [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-UseTransaction] [<CommonParameters>]


DESCRIPTION
    The Get-ItemProperty cmdlet gets the properties of the specified items. For example, you can use this cmdlet to get the value of the LastAccessTime property of a file object. You can also use t
    his cmdlet to view registry entries and their values.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821588
    Clear-ItemProperty
    Copy-ItemProperty
    Move-ItemProperty
    New-ItemProperty
    Remove-ItemProperty
    Rename-ItemProperty
    Set-ItemProperty

REMARKS
    To see the examples, type: "get-help Get-ItemProperty -examples".
    For more information, type: "get-help Get-ItemProperty -detailed".
    For technical information, type: "get-help Get-ItemProperty -full".
    For online help, type: "get-help Get-ItemProperty -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ItemProperty"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ItemProperty                                   3.1.0.0    Microsoft.PowerShell.Management


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ItemProperty"

NAME
    Get-ItemProperty

SYNOPSIS
    Gets the properties of a specified item.


SYNTAX
    Get-ItemProperty [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -LiteralPath <String[]> [-UseTransaction] [<CommonParameters>]

    Get-ItemProperty [-Path] <String[]> [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-UseTransaction] [<CommonParameters>]


DESCRIPTION
    The Get-ItemProperty cmdlet gets the properties of the specified items. For example, you can use this cmdlet to get the value of the LastAccessTime property of a file object. You can also use t
    his cmdlet to view registry entries and their values.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821588
    Clear-ItemProperty
    Copy-ItemProperty
    Move-ItemProperty
    New-ItemProperty
    Remove-ItemProperty
    Rename-ItemProperty
    Set-ItemProperty

REMARKS
    To see the examples, type: "get-help Get-ItemProperty -examples".
    For more information, type: "get-help Get-ItemProperty -detailed".
    For technical information, type: "get-help Get-ItemProperty -full".
    For online help, type: "get-help Get-ItemProperty -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-ItemProperty"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-ItemProperty                                   3.1.0.0    Microsoft.PowerShell.Management


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-ItemProperty"

NAME
    Get-ItemProperty

SYNOPSIS
    Gets the properties of a specified item.


SYNTAX
    Get-ItemProperty [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -LiteralPath <String[]> [-UseTransaction] [<CommonParameters>]

    Get-ItemProperty [-Path] <String[]> [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-UseTransaction] [<CommonParameters>]


DESCRIPTION
    The Get-ItemProperty cmdlet gets the properties of the specified items. For example, you can use this cmdlet to get the value of the LastAccessTime property of a file object. You can also use t
    his cmdlet to view registry entries and their values.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821588
    Clear-ItemProperty
    Copy-ItemProperty
    Move-ItemProperty
    New-ItemProperty
    Remove-ItemProperty
    Rename-ItemProperty
    Set-ItemProperty

REMARKS
    To see the examples, type: "get-help Get-ItemProperty -examples".
    For more information, type: "get-help Get-ItemProperty -detailed".
    For technical information, type: "get-help Get-ItemProperty -full".
    For online help, type: "get-help Get-ItemProperty -online"


