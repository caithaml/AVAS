**********************
Windows PowerShell transcript start
Start time: 20170921144530
Username: DESKTOP-TBE27PS\lukas
RunAs User: DESKTOP-TBE27PS\lukas
Configuration Name: 
Machine: DESKTOP-TBE27PS (Microsoft Windows NT 10.0.16291.0)
Host Application: C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command & 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\scripts\Start-EditorServices.ps1' -EditorServicesVersion '1.4.1' -HostName 'Visual Studio Code Host' -HostProfileId 'Microsoft.VSCode' -HostVersion '1.4.3' -AdditionalModules @('PowerShellEditorServices.VSCode') -BundledModulesPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\modules' -EnableConsoleRepl -LogLevel 'Normal' -LogPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\logs\1505994743-ab46d189-c7b0-41c6-a1e3-a58170dc235d1505994740860\EditorServices.log' -SessionDetailsPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\sessions\PSES-VSCode-12964-286024' -FeatureFlags @()
Process ID: 3928
PSVersion: 5.1.16291.0
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.16291.0
BuildVersion: 10.0.16291.0
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is ./transcript2017-09-21-02-45-30.txt
09/21/2017 14:45:30 - Nacitani json konfiguracniho souboru
09/21/2017 14:45:38 - Dokonce nacitani json konfiguracniho souboru
09/21/2017 14:45:38 - zjisteni zda je uzivatel admin
WARNING: Ujistete se ze spoustite AVAS jako administrator! Provedte spusteni jako administrator nebo nemusi vse fungovat korektne!!
09/21/2017 14:45:38 - ukonceno zjistovani zda je uzivatel admin
09/21/2017 14:45:38 - uzivatel je admin pokracuje dalsi spusteni skriptu
09/21/2017 14:45:38 - Nacitam GUI
You cannot call a method on a null-valued expression.
At D:\SICZ\avas\AVAS_LuKA\avas_LuKa.ps1:911 char:1
+ $mtbn_app.Add_Click({
+ ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull
You cannot call a method on a null-valued expression.
At D:\SICZ\avas\AVAS_LuKA\avas_LuKa.ps1:911 char:1
+ $mtbn_app.Add_Click({
+ ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull

Cancel
PS>@{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      3928
computerName                   DESKTOP-TBE27PS
instanceId                     d41d45d4-0f9b-4778-97ff-f4da6ca5098a


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is ./transcript2017-09-21-02-50-04.txt
09/21/2017 14:50:04 - Nacitani json konfiguracniho souboru
09/21/2017 14:50:09 - Dokonce nacitani json konfiguracniho souboru
09/21/2017 14:50:09 - zjisteni zda je uzivatel admin
WARNING: Ujistete se ze spoustite AVAS jako administrator! Provedte spusteni jako administrator nebo nemusi vse fungovat korektne!!
09/21/2017 14:50:09 - ukonceno zjistovani zda je uzivatel admin
09/21/2017 14:50:09 - uzivatel je admin pokracuje dalsi spusteni skriptu
09/21/2017 14:50:09 - Nacitam GUI
You cannot call a method on a null-valued expression.
At D:\SICZ\avas\AVAS_LuKA\avas_LuKa.ps1:911 char:1
+ $mtbn_app.Add_Click({
+ ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull
You cannot call a method on a null-valued expression.
At D:\SICZ\avas\AVAS_LuKA\avas_LuKa.ps1:911 char:1
+ $mtbn_app.Add_Click({
+ ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull

Cancel
PS D:\SICZ\avas\AVAS_LuKA> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      3928
computerName                   DESKTOP-TBE27PS
instanceId                     d41d45d4-0f9b-4778-97ff-f4da6ca5098a


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
PS D:\SICZ\avas\AVAS_LuKA> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      3928
computerName                   DESKTOP-TBE27PS
instanceId                     d41d45d4-0f9b-4778-97ff-f4da6ca5098a


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="GenValObj.exe"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Application     GenValObj.exe                                      10.0.16... C:\WINDOWS\system32\GenValObj.exe


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Acl"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Acl                                            3.0.0.0    Microsoft.PowerShell.Security


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Acl"

NAME
    Get-Acl

SYNOPSIS
    Gets the security descriptor for a resource, such as a file or registry key.


SYNTAX
    Get-Acl [-AllCentralAccessPolicies] [-Audit] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -InputObject <PSObject> [-UseTransaction] [<CommonParameters>]

    Get-Acl [-AllCentralAccessPolicies] [-Audit] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-LiteralPath <String[]>] [-UseTransaction] [<CommonParameters>]

    Get-Acl [[-Path] <String[]>] [-AllCentralAccessPolicies] [-Audit] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-UseTransaction] [<CommonParameters>]


DESCRIPTION
    The Get-Acl cmdlet gets objects that represent the security descriptor of a file or resource. The security descriptor contains the access control lists (ACLs) of the resource. The ACL specifies
     the permissions that users and user groups have to access the resource.

    Beginning with Windows PowerShell 3.0, you can use the InputObject parameter of Get-Acl to get the security descriptor of objects that do not have a path.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821710
    Set-Acl

REMARKS
    To see the examples, type: "get-help Get-Acl -examples".
    For more information, type: "get-help Get-Acl -detailed".
    For technical information, type: "get-help Get-Acl -full".
    For online help, type: "get-help Get-Acl -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Acl"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Acl                                            3.0.0.0    Microsoft.PowerShell.Security


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Acl"

NAME
    Get-Acl

SYNOPSIS
    Gets the security descriptor for a resource, such as a file or registry key.


SYNTAX
    Get-Acl [-AllCentralAccessPolicies] [-Audit] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -InputObject <PSObject> [-UseTransaction] [<CommonParameters>]

    Get-Acl [-AllCentralAccessPolicies] [-Audit] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-LiteralPath <String[]>] [-UseTransaction] [<CommonParameters>]

    Get-Acl [[-Path] <String[]>] [-AllCentralAccessPolicies] [-Audit] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-UseTransaction] [<CommonParameters>]


DESCRIPTION
    The Get-Acl cmdlet gets objects that represent the security descriptor of a file or resource. The security descriptor contains the access control lists (ACLs) of the resource. The ACL specifies
     the permissions that users and user groups have to access the resource.

    Beginning with Windows PowerShell 3.0, you can use the InputObject parameter of Get-Acl to get the security descriptor of objects that do not have a path.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821710
    Set-Acl

REMARKS
    To see the examples, type: "get-help Get-Acl -examples".
    For more information, type: "get-help Get-Acl -detailed".
    For technical information, type: "get-help Get-Acl -full".
    For online help, type: "get-help Get-Acl -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-MaskingSet"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Get-MaskingSet                                     2.0.0.0    Storage


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-MaskingSet"

NAME
    Get-MaskingSet

SYNOPSIS
    Gets masking sets. Masking sets are used to grant access to a virtual disk or iSCSI VHD for one or more servers.


SYNTAX
    Get-MaskingSet [[-FriendlyName] <String[]>] [-CimSession <CimSession[]>] [-HostType <HostType[]>] [-ThrottleLimit <Int32>] [<CommonParameters>]

    Get-MaskingSet [-CimSession <CimSession[]>] [-InitiatorId <CimInstance>] [-ThrottleLimit <Int32>] [<CommonParameters>]

    Get-MaskingSet [-CimSession <CimSession[]>] [-TargetPort <CimInstance>] [-ThrottleLimit <Int32>] [<CommonParameters>]

    Get-MaskingSet [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-VirtualDisk <CimInstance>] [<CommonParameters>]

    Get-MaskingSet [-CimSession <CimSession[]>] [-StorageSubSystem <CimInstance>] [-ThrottleLimit <Int32>] [<CommonParameters>]

    Get-MaskingSet [-CimSession <CimSession[]>] [-ThrottleLimit <Int32>] [-UniqueId <String[]>] [<CommonParameters>]


DESCRIPTION
    The Get-MaskingSet cmdlet returns a list of created masking sets. Masking sets are used to grant access to a virtual disk or iSCSI VHD for one or more servers.

    ps_storage_spacesubsystem_not_remark


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=816390
    Get-InitiatorPort
    Get-TargetPort
    New-MaskingSet
    Remove-MaskingSet
    Rename-MaskingSet
    Get-VirtualDisk

REMARKS
    To see the examples, type: "get-help Get-MaskingSet -examples".
    For more information, type: "get-help Get-MaskingSet -detailed".
    For technical information, type: "get-help Get-MaskingSet -full".
    For online help, type: "get-help Get-MaskingSet -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-MSHotfix"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        Get-MSHotfix


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-MSHotfix"

NAME
    Get-MSHotfix

SYNTAX
    Get-MSHotfix


ALIASES
    None


REMARKS
    None



PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="-Property"
PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Second <Int32
    >] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Second <Int32>] [-UFormat <Strin
    g>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX formats. You can use Get-Date
     to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Second <Int32
    >] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Second <Int32>] [-UFormat <Strin
    g>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX formats. You can use Get-Date
     to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Write-Host"

NAME
    Write-Host

SYNOPSIS
    Writes customized output to a host.


SYNTAX
    Write-Host [[-Object] <Object>] [-BackgroundColor {Black | DarkBlue | DarkGreen | DarkCyan | DarkRed | DarkMagenta | DarkYellow | Gray | DarkGray | Blue | Green | Cyan | Red | Magenta | Yellow
    | White}] [-ForegroundColor {Black | DarkBlue | DarkGreen | DarkCyan | DarkRed | DarkMagenta | DarkYellow | Gray | DarkGray | Blue | Green | Cyan | Red | Magenta | Yellow | White}] [-NoNewline]
     [-Separator <Object>] [<CommonParameters>]


DESCRIPTION
    The Write-Host cmdlet customizes output. You can specify the color of text by using the ForegroundColor parameter, and you can specify the background color by using the BackgroundColor paramete
    r. The Separator parameter lets you specify a string to use to separate displayed objects. The particular result depends on the program that is hosting Windows PowerShell.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821876
    Clear-Host
    Write-Debug
    Write-Error
    Write-Output
    Write-Progress
    Write-Verbose
    Write-Warning

REMARKS
    To see the examples, type: "get-help Write-Host -examples".
    For more information, type: "get-help Write-Host -detailed".
    For technical information, type: "get-help Write-Host -full".
    For online help, type: "get-help Write-Host -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Write-Host"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Write-Host                                         3.1.0.0    Microsoft.PowerShell.Utility


