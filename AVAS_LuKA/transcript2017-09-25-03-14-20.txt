**********************
Windows PowerShell transcript start
Start time: 20170925151420
Username: DESKTOP-TBE27PS\lukas
RunAs User: DESKTOP-TBE27PS\lukas
Configuration Name: 
Machine: DESKTOP-TBE27PS (Microsoft Windows NT 10.0.16296.0)
Host Application: C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command & 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\scripts\Start-EditorServices.ps1' -EditorServicesVersion '1.4.1' -HostName 'Visual Studio Code Host' -HostProfileId 'Microsoft.VSCode' -HostVersion '1.4.3' -AdditionalModules @('PowerShellEditorServices.VSCode') -BundledModulesPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\modules' -EnableConsoleRepl -LogLevel 'Normal' -LogPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\logs\1506345192-d5a02cc6-4a90-404b-a65d-7dbeba75e49e1506345189971\EditorServices.log' -SessionDetailsPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.3\sessions\PSES-VSCode-8576-865817' -FeatureFlags @()
Process ID: 13976
PSVersion: 5.1.16296.0
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.16296.0
BuildVersion: 10.0.16296.0
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is ./transcript2017-09-25-03-14-20.txt
09/25/2017 15:14:20 - Nacitani json konfiguracniho souboru
09/25/2017 15:14:25 - Dokonce nacitani json konfiguracniho souboru
09/25/2017 15:14:25 - zjisteni zda je uzivatel admin
WARNING: Ujistete se ze spoustite AVAS jako administrator! Provedte spusteni jako administrator nebo nemusi vse fungovat korektne!!
09/25/2017 15:14:25 - ukonceno zjistovani zda je uzivatel admin
09/25/2017 15:14:25 - uzivatel je admin pokracuje dalsi spusteni skriptu
09/25/2017 15:14:25 - Nacitam GUI
Cancel
PS>@{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      13976
computerName                   DESKTOP-TBE27PS
instanceId                     4184d989-250f-4140-9594-a51c5cfa2877


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="New-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and the cmdlet returns a reference
     to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="New-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and the cmdlet returns a reference
     to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is ./transcript2017-09-25-03-21-13.txt
09/25/2017 15:21:13 - Nacitani json konfiguracniho souboru
09/25/2017 15:21:17 - Dokonce nacitani json konfiguracniho souboru
09/25/2017 15:21:17 - zjisteni zda je uzivatel admin
WARNING: Ujistete se ze spoustite AVAS jako administrator! Provedte spusteni jako administrator nebo nemusi vse fungovat korektne!!
09/25/2017 15:21:17 - ukonceno zjistovani zda je uzivatel admin
09/25/2017 15:21:17 - uzivatel je admin pokracuje dalsi spusteni skriptu
09/25/2017 15:21:17 - Nacitam GUI
Cancel
PS D:\SICZ\avas\AVAS_LuKA> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      13976
computerName                   DESKTOP-TBE27PS
instanceId                     4184d989-250f-4140-9594-a51c5cfa2877


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="New-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and the cmdlet returns a reference
     to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="New-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and the cmdlet returns a reference
     to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS D:\SICZ\avas\AVAS_LuKA> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="start"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Alias           start -> Start-Process


