**********************
Windows PowerShell transcript start
Start time: 20170912161821
Username: DESKTOP-V056PHL\lukas
RunAs User: DESKTOP-V056PHL\lukas
Configuration Name: 
Machine: DESKTOP-V056PHL (Microsoft Windows NT 10.0.16353.0)
Host Application: C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command & 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\scripts\Start-EditorServices.ps1' -EditorServicesVersion '1.4.1' -HostName 'Visual Studio Code Host' -HostProfileId 'Microsoft.VSCode' -HostVersion '1.4.2' -AdditionalModules @('PowerShellEditorServices.VSCode') -BundledModulesPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\modules' -EnableConsoleRepl -LogLevel 'Normal' -LogPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\logs\1505222757-4186a34b-a61e-4ef1-b866-10bb0d6bb4361505222746696\EditorServices.log' -SessionDetailsPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\sessions\PSES-VSCode-8032-329842' -FeatureFlags @()
Process ID: 16324
PSVersion: 5.1.16353.1000
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.16353.1000
BuildVersion: 10.0.16353.1000
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is ./transcript-avas-2017-09-12-04-18-21.txt
09/12/2017 16:18:21 - Nacitani json konfiguracniho souboru
09/12/2017 16:18:25 - Dokonceno nacitani json konfiguracniho souboru
18944000
DELL   - 1072009 | BIOS Date: 12/22/16 01:25:40 Ver: A20.00

value               DateTime
-----               --------
22.12.2016 0:00:00  čtvrtek 22. prosince 2016 1:00:00






































































MICA
420
07.09.2017 13:38:19 čtvrtek 7. září 2017 15:38:19
00000409
sicz.local

Not Installed





Not Installed



24.03.2017 20:35:51 pátek 24. března 2017 21:35:51



















































































































































































































































































































































































Not Installed
                    úterý 5. září 2017 6:09:54







































00000405























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Microsoft Windows 10 Pro
10.0.15063



































































































































































































































































0






















































































































































































0
NN
C:\WINDOWS\system32
00000405
20975616
C:\WINDOWS\TEMP
N
caith
False












































































































21
33
C:\WINDOWS
8
16289
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:75 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:75 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

>> TerminatingError(Compare-Object): "Cannot bind argument to parameter 'ReferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\Untitled-1-1-1-1.ps1:78 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObject
Command
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\Untitled-1-1-1-1.ps1:78 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:110 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:110 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\avas> TerminatingError(Compare-Object): "A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, Publisher | Where .SideIndicator â€eq'."
Compare-Object : A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, P
ublisher | Where .SideIndicator â€eq'.
At C:\avas\Untitled-1-1-1-1.ps1:138 char:1
+ Compare-Object $app $app2 â€“property DisplayName, DisplayVersion, Pu ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, Publisher | Where .SideIndicator â€eq'.
At C:\avas\Untitled-1-1-1-1.ps1:138 char:1
+ Compare-Object $app $app2 â€“property DisplayName, DisplayVersion, Pu ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand

















Publisher      : Microsoft Corporation
DisplayVersion : 10.0.26624
DisplayName    : Universal CRT Extension SDK

Publisher      : Microsoft Corporation
DisplayVersion : 10.1.15063.468
DisplayName    : Universal CRT Headers Libraries and Sources

Publisher      : Microsoft Corporation
DisplayVersion : 10.0.26624
DisplayName    : Universal CRT Headers Libraries and Sources

Publisher      : Microsoft Corporation
DisplayVersion : 14.11.25506
DisplayName    : Visual C++ Library CRT Appx Package

Publisher      : Microsoft Corporation
DisplayVersion : 14.11.25507
DisplayName    : Visual C++ Library CRT Appx Package

Publisher      : Microsoft Corporation
DisplayVersion : 10.1.15063.468
DisplayName    : Universal CRT Extension SDK



PS C:\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      16324
computerName                   DESKTOP-V056PHL
instanceId                     629f5bf8-7b37-4ac2-b498-8ee545aa3140


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-M
    onth <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Sec
    ond <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX
    formats. You can use Get-Date to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-M
    onth <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Sec
    ond <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX
    formats. You can use Get-Date to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Compare-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Compare-Object                                     3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Compare-Object"

NAME
    Compare-Object

SYNOPSIS
    Compares two sets of objects.


SYNTAX
    Compare-Object [-ReferenceObject] <PSObject[]> [-DifferenceObject] <PSObject[]> [-CaseSensitive] [-Culture <String>] [-ExcludeDifferent] [-IncludeEqual] [-PassThru]
     [-Property <Object[]>] [-SyncWindow <Int32>] [<CommonParameters>]


DESCRIPTION
    The Compare-Object cmdlet compares two sets of objects. One set of objects is the "reference set," and the other set is the "difference set."

    The result of the comparison indicates whether a property value appeared only in the object from the reference set (indicated by the <= symbol), only in the object
    from the difference set (indicated by the => symbol) or, if the IncludeEqual parameter is specified, in both objects (indicated by the == symbol).

    If the reference set or the difference set is null ($null), this cmdlet generates a terminating error.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821751
    Group-Object
    Measure-Object
    New-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help Compare-Object -examples".
    For more information, type: "get-help Compare-Object -detailed".
    For technical information, type: "get-help Compare-Object -full".
    For online help, type: "get-help Compare-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Compare-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Compare-Object                                     3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Compare-Object"

NAME
    Compare-Object

SYNOPSIS
    Compares two sets of objects.


SYNTAX
    Compare-Object [-ReferenceObject] <PSObject[]> [-DifferenceObject] <PSObject[]> [-CaseSensitive] [-Culture <String>] [-ExcludeDifferent] [-IncludeEqual] [-PassThru]
     [-Property <Object[]>] [-SyncWindow <Int32>] [<CommonParameters>]


DESCRIPTION
    The Compare-Object cmdlet compares two sets of objects. One set of objects is the "reference set," and the other set is the "difference set."

    The result of the comparison indicates whether a property value appeared only in the object from the reference set (indicated by the <= symbol), only in the object
    from the difference set (indicated by the => symbol) or, if the IncludeEqual parameter is specified, in both objects (indicated by the == symbol).

    If the reference set or the difference set is null ($null), this cmdlet generates a terminating error.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821751
    Group-Object
    Measure-Object
    New-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help Compare-Object -examples".
    For more information, type: "get-help Compare-Object -detailed".
    For technical information, type: "get-help Compare-Object -full".
    For online help, type: "get-help Compare-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="New-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


