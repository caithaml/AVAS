**********************
Windows PowerShell transcript start
Start time: 20170912154620
Username: DESKTOP-V056PHL\lukas
RunAs User: DESKTOP-V056PHL\lukas
Configuration Name: 
Machine: DESKTOP-V056PHL (Microsoft Windows NT 10.0.16353.0)
Host Application: C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command & 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\scripts\Start-EditorServices.ps1' -EditorServicesVersion '1.4.1' -HostName 'Visual Studio Code Host' -HostProfileId 'Microsoft.VSCode' -HostVersion '1.4.2' -AdditionalModules @('PowerShellEditorServices.VSCode') -BundledModulesPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\modules' -EnableConsoleRepl -LogLevel 'Normal' -LogPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\logs\1505222757-4186a34b-a61e-4ef1-b866-10bb0d6bb4361505222746696\EditorServices.log' -SessionDetailsPath 'C:\Users\lukas\.vscode\extensions\ms-vscode.powershell-1.4.2\sessions\PSES-VSCode-8032-329842' -FeatureFlags @()
Process ID: 16324
PSVersion: 5.1.16353.1000
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.16353.1000
BuildVersion: 10.0.16353.1000
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is ./transcript-avas-2017-09-12-03-46-20.txt
09/12/2017 15:46:20 - Nacitani json konfiguracniho souboru
09/12/2017 15:46:25 - Dokonceno nacitani json konfiguracniho souboru
18944000
DELL   - 1072009 | BIOS Date: 12/22/16 01:25:40 Ver: A20.00

value               DateTime
-----               --------
22.12.2016 0:00:00  čtvrtek 22. prosince 2016 1:00:00






































































MICA
420
07.09.2017 13:38:19 čtvrtek 7. září 2017 15:38:19
00000409
sicz.local

Not Installed





Not Installed



24.03.2017 20:35:51 pátek 24. března 2017 21:35:51



















































































































































































































































































































































































Not Installed
                    úterý 5. září 2017 6:09:54







































00000405























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Microsoft Windows 10 Pro
10.0.15063



































































































































































































































































0






















































































































































































0
NN
C:\WINDOWS\system32
00000405
20975616
C:\WINDOWS\TEMP
N
caith
False












































































































21
33
C:\WINDOWS
8
16289
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:75 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:75 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

>> TerminatingError(Compare-Object): "Cannot bind argument to parameter 'ReferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\Untitled-1-1-1-1.ps1:78 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObject
Command
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\Untitled-1-1-1-1.ps1:78 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:110 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:110 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\avas> TerminatingError(Compare-Object): "A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, Publisher | Where .SideIndicator â€eq'."
Compare-Object : A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, P
ublisher | Where .SideIndicator â€eq'.
At C:\avas\Untitled-1-1-1-1.ps1:138 char:1
+ Compare-Object $app $app2 â€“property DisplayName, DisplayVersion, Pu ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, Publisher | Where .SideIndicator â€eq'.
At C:\avas\Untitled-1-1-1-1.ps1:138 char:1
+ Compare-Object $app $app2 â€“property DisplayName, DisplayVersion, Pu ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand

















Publisher      : Microsoft Corporation
DisplayVersion : 10.0.26624
DisplayName    : Universal CRT Extension SDK

Publisher      : Microsoft Corporation
DisplayVersion : 10.1.15063.468
DisplayName    : Universal CRT Headers Libraries and Sources

Publisher      : Microsoft Corporation
DisplayVersion : 10.0.26624
DisplayName    : Universal CRT Headers Libraries and Sources

Publisher      : Microsoft Corporation
DisplayVersion : 14.11.25506
DisplayName    : Visual C++ Library CRT Appx Package

Publisher      : Microsoft Corporation
DisplayVersion : 14.11.25507
DisplayName    : Visual C++ Library CRT Appx Package

Publisher      : Microsoft Corporation
DisplayVersion : 10.1.15063.468
DisplayName    : Universal CRT Extension SDK



PS C:\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      16324
computerName                   DESKTOP-V056PHL
instanceId                     629f5bf8-7b37-4ac2-b498-8ee545aa3140


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="compareHotfixes"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Function        compareHotfixes


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="compareHotfixes"

NAME
    compareHotfixes

SYNTAX
    compareHotfixes [[-fobjColl] <Object>] [[-fullreport] <Object>]


ALIASES
    None


REMARKS
    None



PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="add-Member"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Add-Member                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Add-Member"

NAME
    Add-Member

SYNOPSIS
    Adds custom properties and methods to an instance of a Windows PowerShell object.


SYNTAX
    Add-Member [-MemberType] {AliasProperty | CodeProperty | Property | NoteProperty | ScriptProperty | Properties | PropertySet | Method | CodeMethod | ScriptMethod |
    Methods | ParameterizedProperty | MemberSet | Event | Dynamic | All} [-Name] <String> [[-Value] <Object>] [[-SecondValue] <Object>] [-Force] -InputObject <PSObject>
     [-PassThru] [-TypeName <String>] [<CommonParameters>]

    Add-Member [-NotePropertyName] <String> [-NotePropertyValue] <Object> [-Force] -InputObject <PSObject> [-PassThru] [-TypeName <String>] [<CommonParameters>]

    Add-Member [-NotePropertyMembers] <IDictionary> [-Force] -InputObject <PSObject> [-PassThru] [-TypeName <String>] [<CommonParameters>]

    Add-Member -InputObject <PSObject> [-PassThru] -TypeName <String> [<CommonParameters>]


DESCRIPTION
    The Add-Member cmdlet lets you add members (properties and methods) to an instance of a Windows PowerShell object. For instance, you can add a NoteProperty member t
    hat contains a description of the object or a ScriptMethod member that runs a script to change the object.

    To use Add-Member , pipe the object to Add-Member , or use the InputObject parameter to specify the object. Use the MemberType parameter to specify the type of memb
    er that you want to add, use the Name parameter to assign a name to the new member, and use the Value parameter to set the value of the member.

    The properties and methods that you add are added only to the particular instance of the object that you specify. Add-Member does not change the object type. To cre
    ate a new object type, use the Add-Type cmdlet. You can also use the Export-Clixml cmdlet to save the instance of the object, including the additional members, in a
     file. Then you can use the Import-Clixml cmdlet to re-create the instance of the object from the information that is stored in the exported file.

    Beginning in Windows PowerShell 3.0, Add-Member has new features that make it easier to add note properties to objects. You can use the NotePropertyName and NotePro
    pertyValue parameters to define a note property or use the NotePropertyMembers parameter, which takes a hash table of note property names and values.

    Also, beginning in Windows PowerShell 3.0, the PassThru parameter, which generates an output object, is needed less frequently. Add-Member now adds the new members
    directly to the input object of more types. For more information, see the PassThru parameter description.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821748
    Export-Clixml
    Get-Member
    Import-Clixml
    New-Object

REMARKS
    To see the examples, type: "get-help Add-Member -examples".
    For more information, type: "get-help Add-Member -detailed".
    For technical information, type: "get-help Add-Member -full".
    For online help, type: "get-help Add-Member -online"


PS C:\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is ./transcript-avas-2017-09-12-04-01-21.txt
09/12/2017 16:01:21 - Nacitani json konfiguracniho souboru
09/12/2017 16:01:24 - Dokonceno nacitani json konfiguracniho souboru
18944000
DELL   - 1072009 | BIOS Date: 12/22/16 01:25:40 Ver: A20.00

value               DateTime
-----               --------
22.12.2016 0:00:00  čtvrtek 22. prosince 2016 1:00:00






































































MICA
420
07.09.2017 13:38:19 čtvrtek 7. září 2017 15:38:19
00000409
sicz.local

Not Installed





Not Installed



24.03.2017 20:35:51 pátek 24. března 2017 21:35:51



















































































































































































































































































































































































Not Installed
                    úterý 5. září 2017 6:09:54







































00000405























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Microsoft Windows 10 Pro
10.0.15063



































































































































































































































































0






















































































































































































0
NN
C:\WINDOWS\system32
00000405
20975616
C:\WINDOWS\TEMP
N
caith
False












































































































21
33
C:\WINDOWS
8
16289
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:75 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:75 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

>> TerminatingError(Compare-Object): "Cannot bind argument to parameter 'ReferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\Untitled-1-1-1-1.ps1:78 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObject
Command
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\Untitled-1-1-1-1.ps1:78 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:110 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:110 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\avas> TerminatingError(Compare-Object): "A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, Publisher | Where .SideIndicator â€eq'."
Compare-Object : A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, P
ublisher | Where .SideIndicator â€eq'.
At C:\avas\Untitled-1-1-1-1.ps1:138 char:1
+ Compare-Object $app $app2 â€“property DisplayName, DisplayVersion, Pu ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, Publisher | Where .SideIndicator â€eq'.
At C:\avas\Untitled-1-1-1-1.ps1:138 char:1
+ Compare-Object $app $app2 â€“property DisplayName, DisplayVersion, Pu ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand

















Publisher      : Microsoft Corporation
DisplayVersion : 10.0.26624
DisplayName    : Universal CRT Extension SDK

Publisher      : Microsoft Corporation
DisplayVersion : 10.1.15063.468
DisplayName    : Universal CRT Headers Libraries and Sources

Publisher      : Microsoft Corporation
DisplayVersion : 10.0.26624
DisplayName    : Universal CRT Headers Libraries and Sources

Publisher      : Microsoft Corporation
DisplayVersion : 14.11.25506
DisplayName    : Visual C++ Library CRT Appx Package

Publisher      : Microsoft Corporation
DisplayVersion : 14.11.25507
DisplayName    : Visual C++ Library CRT Appx Package

Publisher      : Microsoft Corporation
DisplayVersion : 10.1.15063.468
DisplayName    : Universal CRT Extension SDK



PS C:\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      16324
computerName                   DESKTOP-V056PHL
instanceId                     629f5bf8-7b37-4ac2-b498-8ee545aa3140


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Compare-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Compare-Object                                     3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Compare-Object"

NAME
    Compare-Object

SYNOPSIS
    Compares two sets of objects.


SYNTAX
    Compare-Object [-ReferenceObject] <PSObject[]> [-DifferenceObject] <PSObject[]> [-CaseSensitive] [-Culture <String>] [-ExcludeDifferent] [-IncludeEqual] [-PassThru]
     [-Property <Object[]>] [-SyncWindow <Int32>] [<CommonParameters>]


DESCRIPTION
    The Compare-Object cmdlet compares two sets of objects. One set of objects is the "reference set," and the other set is the "difference set."

    The result of the comparison indicates whether a property value appeared only in the object from the reference set (indicated by the <= symbol), only in the object
    from the difference set (indicated by the => symbol) or, if the IncludeEqual parameter is specified, in both objects (indicated by the == symbol).

    If the reference set or the difference set is null ($null), this cmdlet generates a terminating error.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821751
    Group-Object
    Measure-Object
    New-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help Compare-Object -examples".
    For more information, type: "get-help Compare-Object -detailed".
    For technical information, type: "get-help Compare-Object -full".
    For online help, type: "get-help Compare-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="New-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is ./transcript-avas-2017-09-12-04-11-24.txt
09/12/2017 16:11:24 - Nacitani json konfiguracniho souboru
09/12/2017 16:11:28 - Dokonceno nacitani json konfiguracniho souboru
18944000
DELL   - 1072009 | BIOS Date: 12/22/16 01:25:40 Ver: A20.00

value               DateTime
-----               --------
22.12.2016 0:00:00  čtvrtek 22. prosince 2016 1:00:00






































































MICA
420
07.09.2017 13:38:19 čtvrtek 7. září 2017 15:38:19
00000409
sicz.local

Not Installed





Not Installed



24.03.2017 20:35:51 pátek 24. března 2017 21:35:51



















































































































































































































































































































































































Not Installed
                    úterý 5. září 2017 6:09:54







































00000405























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Microsoft Windows 10 Pro
10.0.15063



































































































































































































































































0






















































































































































































0
NN
C:\WINDOWS\system32
00000405
20975616
C:\WINDOWS\TEMP
N
caith
False












































































































21
33
C:\WINDOWS
8
16289
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:75 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:75 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

>> TerminatingError(Compare-Object): "Cannot bind argument to parameter 'ReferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\Untitled-1-1-1-1.ps1:78 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObject
Command
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\Untitled-1-1-1-1.ps1:78 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:110 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:110 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\avas> TerminatingError(Compare-Object): "A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, Publisher | Where .SideIndicator â€eq'."
Compare-Object : A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, P
ublisher | Where .SideIndicator â€eq'.
At C:\avas\Untitled-1-1-1-1.ps1:138 char:1
+ Compare-Object $app $app2 â€“property DisplayName, DisplayVersion, Pu ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, Publisher | Where .SideIndicator â€eq'.
At C:\avas\Untitled-1-1-1-1.ps1:138 char:1
+ Compare-Object $app $app2 â€“property DisplayName, DisplayVersion, Pu ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand

















Publisher      : Microsoft Corporation
DisplayVersion : 10.0.26624
DisplayName    : Universal CRT Extension SDK

Publisher      : Microsoft Corporation
DisplayVersion : 10.1.15063.468
DisplayName    : Universal CRT Headers Libraries and Sources

Publisher      : Microsoft Corporation
DisplayVersion : 10.0.26624
DisplayName    : Universal CRT Headers Libraries and Sources

Publisher      : Microsoft Corporation
DisplayVersion : 14.11.25506
DisplayName    : Visual C++ Library CRT Appx Package

Publisher      : Microsoft Corporation
DisplayVersion : 14.11.25507
DisplayName    : Visual C++ Library CRT Appx Package

Publisher      : Microsoft Corporation
DisplayVersion : 10.1.15063.468
DisplayName    : Universal CRT Extension SDK



PS C:\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      16324
computerName                   DESKTOP-V056PHL
instanceId                     629f5bf8-7b37-4ac2-b498-8ee545aa3140


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="New-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="New-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is ./transcript-avas-2017-09-12-04-18-21.txt
09/12/2017 16:18:21 - Nacitani json konfiguracniho souboru
09/12/2017 16:18:25 - Dokonceno nacitani json konfiguracniho souboru
18944000
DELL   - 1072009 | BIOS Date: 12/22/16 01:25:40 Ver: A20.00

value               DateTime
-----               --------
22.12.2016 0:00:00  čtvrtek 22. prosince 2016 1:00:00






































































MICA
420
07.09.2017 13:38:19 čtvrtek 7. září 2017 15:38:19
00000409
sicz.local

Not Installed





Not Installed



24.03.2017 20:35:51 pátek 24. března 2017 21:35:51



















































































































































































































































































































































































Not Installed
                    úterý 5. září 2017 6:09:54







































00000405























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Microsoft Windows 10 Pro
10.0.15063



































































































































































































































































0






















































































































































































0
NN
C:\WINDOWS\system32
00000405
20975616
C:\WINDOWS\TEMP
N
caith
False












































































































21
33
C:\WINDOWS
8
16289
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:75 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:75 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

>> TerminatingError(Compare-Object): "Cannot bind argument to parameter 'ReferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\Untitled-1-1-1-1.ps1:78 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObject
Command
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\Untitled-1-1-1-1.ps1:78 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:110 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:110 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\avas> TerminatingError(Compare-Object): "A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, Publisher | Where .SideIndicator â€eq'."
Compare-Object : A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, P
ublisher | Where .SideIndicator â€eq'.
At C:\avas\Untitled-1-1-1-1.ps1:138 char:1
+ Compare-Object $app $app2 â€“property DisplayName, DisplayVersion, Pu ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, Publisher | Where .SideIndicator â€eq'.
At C:\avas\Untitled-1-1-1-1.ps1:138 char:1
+ Compare-Object $app $app2 â€“property DisplayName, DisplayVersion, Pu ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand

















Publisher      : Microsoft Corporation
DisplayVersion : 10.0.26624
DisplayName    : Universal CRT Extension SDK

Publisher      : Microsoft Corporation
DisplayVersion : 10.1.15063.468
DisplayName    : Universal CRT Headers Libraries and Sources

Publisher      : Microsoft Corporation
DisplayVersion : 10.0.26624
DisplayName    : Universal CRT Headers Libraries and Sources

Publisher      : Microsoft Corporation
DisplayVersion : 14.11.25506
DisplayName    : Visual C++ Library CRT Appx Package

Publisher      : Microsoft Corporation
DisplayVersion : 14.11.25507
DisplayName    : Visual C++ Library CRT Appx Package

Publisher      : Microsoft Corporation
DisplayVersion : 10.1.15063.468
DisplayName    : Universal CRT Extension SDK



PS C:\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      16324
computerName                   DESKTOP-V056PHL
instanceId                     629f5bf8-7b37-4ac2-b498-8ee545aa3140


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-M
    onth <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Sec
    ond <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX
    formats. You can use Get-Date to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Get-Date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-M
    onth <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Sec
    ond <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX
    formats. You can use Get-Date to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Compare-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Compare-Object                                     3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Compare-Object"

NAME
    Compare-Object

SYNOPSIS
    Compares two sets of objects.


SYNTAX
    Compare-Object [-ReferenceObject] <PSObject[]> [-DifferenceObject] <PSObject[]> [-CaseSensitive] [-Culture <String>] [-ExcludeDifferent] [-IncludeEqual] [-PassThru]
     [-Property <Object[]>] [-SyncWindow <Int32>] [<CommonParameters>]


DESCRIPTION
    The Compare-Object cmdlet compares two sets of objects. One set of objects is the "reference set," and the other set is the "difference set."

    The result of the comparison indicates whether a property value appeared only in the object from the reference set (indicated by the <= symbol), only in the object
    from the difference set (indicated by the => symbol) or, if the IncludeEqual parameter is specified, in both objects (indicated by the == symbol).

    If the reference set or the difference set is null ($null), this cmdlet generates a terminating error.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821751
    Group-Object
    Measure-Object
    New-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help Compare-Object -examples".
    For more information, type: "get-help Compare-Object -detailed".
    For technical information, type: "get-help Compare-Object -full".
    For online help, type: "get-help Compare-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="Compare-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Compare-Object                                     3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Compare-Object"

NAME
    Compare-Object

SYNOPSIS
    Compares two sets of objects.


SYNTAX
    Compare-Object [-ReferenceObject] <PSObject[]> [-DifferenceObject] <PSObject[]> [-CaseSensitive] [-Culture <String>] [-ExcludeDifferent] [-IncludeEqual] [-PassThru]
     [-Property <Object[]>] [-SyncWindow <Int32>] [<CommonParameters>]


DESCRIPTION
    The Compare-Object cmdlet compares two sets of objects. One set of objects is the "reference set," and the other set is the "difference set."

    The result of the comparison indicates whether a property value appeared only in the object from the reference set (indicated by the <= symbol), only in the object
    from the difference set (indicated by the => symbol) or, if the IncludeEqual parameter is specified, in both objects (indicated by the == symbol).

    If the reference set or the difference set is null ($null), this cmdlet generates a terminating error.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821751
    Group-Object
    Measure-Object
    New-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help Compare-Object -examples".
    For more information, type: "get-help Compare-Object -detailed".
    For technical information, type: "get-help Compare-Object -full".
    For online help, type: "get-help Compare-Object -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="New-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is ./transcript-avas-2017-09-12-04-27-04.txt
09/12/2017 16:27:04 - Nacitani json konfiguracniho souboru
09/12/2017 16:27:08 - Dokonceno nacitani json konfiguracniho souboru
18944000
DELL   - 1072009 | BIOS Date: 12/22/16 01:25:40 Ver: A20.00

value               DateTime
-----               --------
22.12.2016 0:00:00  čtvrtek 22. prosince 2016 1:00:00






































































MICA
420
07.09.2017 13:38:19 čtvrtek 7. září 2017 15:38:19
00000409
sicz.local

Not Installed





Not Installed



24.03.2017 20:35:51 pátek 24. března 2017 21:35:51



















































































































































































































































































































































































Not Installed
                    úterý 5. září 2017 6:09:54







































00000405























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Microsoft Windows 10 Pro
10.0.15063



































































































































































































































































0






















































































































































































0
NN
C:\WINDOWS\system32
00000405
20975616
C:\WINDOWS\TEMP
N
caith
False












































































































21
33
C:\WINDOWS
8
16289
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:75 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:75 char:6
+      writelog 0 "Comparing hotfixes between the 2 hosts......" "nonew ...
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

>> TerminatingError(Compare-Object): "Cannot bind argument to parameter 'ReferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\Untitled-1-1-1-1.ps1:78 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObject
Command
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\Untitled-1-1-1-1.ps1:78 char:61
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Ch
eck the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:110 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
writelog : The term 'writelog' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was i
ncluded, verify that the path is correct and try again.
At C:\avas\Untitled-1-1-1-1.ps1:110 char:6
+      writelog 1 "[done]" "extend"
+      ~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (writelog:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\avas> TerminatingError(Compare-Object): "A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, Publisher | Where .SideIndicator â€eq'."
Compare-Object : A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, P
ublisher | Where .SideIndicator â€eq'.
At C:\avas\Untitled-1-1-1-1.ps1:138 char:1
+ Compare-Object $app $app2 â€“property DisplayName, DisplayVersion, Pu ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand
Compare-Object : A positional parameter cannot be found that accepts argument 'â€property DisplayName, DisplayVersion, Publisher | Where .SideIndicator â€eq'.
At C:\avas\Untitled-1-1-1-1.ps1:138 char:1
+ Compare-Object $app $app2 â€“property DisplayName, DisplayVersion, Pu ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Compare-Object], ParameterBindingException
    + FullyQualifiedErrorId : PositionalParameterNotFound,Microsoft.PowerShell.Commands.CompareObjectCommand

















Publisher      : Microsoft Corporation
DisplayVersion : 10.0.26624
DisplayName    : Universal CRT Extension SDK

Publisher      : Microsoft Corporation
DisplayVersion : 10.1.15063.468
DisplayName    : Universal CRT Headers Libraries and Sources

Publisher      : Microsoft Corporation
DisplayVersion : 10.0.26624
DisplayName    : Universal CRT Headers Libraries and Sources

Publisher      : Microsoft Corporation
DisplayVersion : 14.11.25506
DisplayName    : Visual C++ Library CRT Appx Package

Publisher      : Microsoft Corporation
DisplayVersion : 14.11.25507
DisplayName    : Visual C++ Library CRT Appx Package

Publisher      : Microsoft Corporation
DisplayVersion : 10.1.15063.468
DisplayName    : Universal CRT Extension SDK



PS C:\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      16324
computerName                   DESKTOP-V056PHL
instanceId                     629f5bf8-7b37-4ac2-b498-8ee545aa3140


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="new-object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is ./transcript2017-09-12-04-28-13.txt
Exception calling "Substring" with "1" argument(s): "startIndex cannot be larger than length of string.
Parameter name: startIndex"
At C:\avas\hotfixy-logika.ps1:91 char:55
+ ... mand.Path)$($myinvocation.line.substring(($myInvocation.InvocationNam ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : ArgumentOutOfRangeException
Exception calling "Substring" with "1" argument(s): "startIndex cannot be larger than length of string.
Parameter name: startIndex"
At C:\avas\hotfixy-logika.ps1:91 char:55
+ ... mand.Path)$($myinvocation.line.substring(($myInvocation.InvocationNam ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : ArgumentOutOfRangeException

2017/09/12 16:28:14, INF, Syntax: C:\avas\hotfixy-logika.ps1
PS C:\avas> TerminatingError(Add-Content): "Cannot bind argument to parameter 'Path' because it is null."
Add-Content : Cannot bind argument to parameter 'Path' because it is null.
At C:\avas\hotfixy-logika.ps1:38 char:24
+            Add-Content $logfile $message
+                        ~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Add-Content], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.AddContentCom
mand
Add-Content : Cannot bind argument to parameter 'Path' because it is null.
At C:\avas\hotfixy-logika.ps1:38 char:24
+            Add-Content $logfile $message
+                        ~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Add-Content], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.AddContentCommand

2017/09/12 16:28:14, INF, Invoked by: DESKTOP-V056PHL\lukas
PS C:\avas> TerminatingError(Add-Content): "Cannot bind argument to parameter 'Path' because it is null."
Add-Content : Cannot bind argument to parameter 'Path' because it is null.
At C:\avas\hotfixy-logika.ps1:38 char:24
+            Add-Content $logfile $message
+                        ~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Add-Content], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.AddContentCom
mand
Add-Content : Cannot bind argument to parameter 'Path' because it is null.
At C:\avas\hotfixy-logika.ps1:38 char:24
+            Add-Content $logfile $message
+                        ~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Add-Content], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.AddContentCommand

2017/09/12 16:28:14, INF, Comparing hotfixes between the 2 hosts......
PS C:\avas> TerminatingError(Add-Content): "Cannot bind argument to parameter 'Path' because it is null."
Add-Content : Cannot bind argument to parameter 'Path' because it is null.
At C:\avas\hotfixy-logika.ps1:34 char:33
+            $bytes | add-content $logfile -enc byte
+                                 ~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Add-Content], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.AddContentCom
mand
Add-Content : Cannot bind argument to parameter 'Path' because it is null.
At C:\avas\hotfixy-logika.ps1:34 char:33
+            $bytes | add-content $logfile -enc byte
+                                 ~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Add-Content], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.AddContentCommand

PS C:\avas> TerminatingError(Compare-Object): "Cannot bind argument to parameter 'ReferenceObject' because it is null."
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\hotfixy-logika.ps1:56 char:62
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObject
Command
Compare-Object : Cannot bind argument to parameter 'ReferenceObject' because it is null.
At C:\avas\hotfixy-logika.ps1:56 char:62
+ ...     {$comparedHotfixes = compare-object $fobjColl[0].hotfixes $fobjCo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Compare-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.CompareObjectCommand

[done]
PS C:\avas> TerminatingError(Add-Content): "Cannot bind argument to parameter 'Path' because it is null."
Add-Content : Cannot bind argument to parameter 'Path' because it is null.
At C:\avas\hotfixy-logika.ps1:38 char:24
+            Add-Content $logfile $message
+                        ~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Add-Content], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.AddContentCom
mand
Add-Content : Cannot bind argument to parameter 'Path' because it is null.
At C:\avas\hotfixy-logika.ps1:38 char:24
+            Add-Content $logfile $message
+                        ~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Add-Content], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.AddContentCommand

PS C:\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      16324
computerName                   DESKTOP-V056PHL
instanceId                     629f5bf8-7b37-4ac2-b498-8ee545aa3140


PS C:\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is ./transcript2017-09-12-04-28-20.txt

PS C:\avas> TerminatingError(Where-Object): "Cannot validate argument on parameter 'Property'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again."
Where-Object : Cannot validate argument on parameter 'Property'. The argument is null or empty. Provide an argument that
 is not null or empty, and then try the command again.
At C:\avas\sluzby.ps1:7 char:112
+ ... ct $installed  -Property DisplayName | where $_.SideIndicator -EQ "=> ...
+                                                  ~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Where-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationError,Microsoft.PowerShell.Commands.WhereObjectCommand
Export-Csv : Cannot bind argument to parameter 'InputObject' because it is null.
At C:\avas\sluzby.ps1:10 char:13
+ $vysledek | Export-Csv C:\avas\sluzby$(get-date -f yyyy-MM-dd-hh-mm-s ...
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Export-Csv], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.ExportCsvComm
and
DisplayName                                                           SideIndicator
-----------                                                           -------------
AssignedAccessManager Service                                         =>
Capability Access Manager Service                                     =>
Connected Devices Platform User Service_3477b                         =>
DevicesFlow_3477b                                                     =>
Diagnostic Execution Service                                          =>
Fax                                                                   =>
GraphicsPerfSvc                                                       =>
Služba Aktualizace Google (gupdate)                                   =>
Služba Aktualizace Google (gupdatem)                                  =>
Windows Store Install Service                                         =>
MessagingService_3477b                                                =>
Mozilla Maintenance Service                                           =>
Windows Defender Firewall                                             =>
NVIDIA Display Container LS                                           =>
Sync Host_3477b                                                       =>
Contact Data_3477b                                                    =>
PrintWorkflow_3477b                                                   =>
Windows PushToInstall Service                                         =>
Spatial Data Service                                                  =>
Web Account Manager                                                   =>
User Data Storage_3477b                                               =>
User Data Access_3477b                                                =>
WarpJITSvc                                                            =>
Local Profile Assistant Service                                       =>
Windows Media Player Network Sharing Service                          =>
Work Folders                                                          =>
Windows Push Notifications User Service_3477b                         =>
Adobe Acrobat Update Service                                          <=
Microsoft Monitoring Agent Audit Forwarding                           <=
Connected Devices Platform User Service_46504                         <=
DevicesFlow_46504                                                     <=
Intel(R) PROSet/Wireless Event Log                                    <=
Windows Presentation Foundation Font Cache 3.0.0.0                    <=
Google Update Service (gupdate)                                       <=
Google Update Service (gupdatem)                                      <=
Microsoft Monitoring Agent                                            <=
Host Network Service                                                  <=
HomeGroup Listener                                                    <=
Intel(R) Rapid Storage Technology                                     <=
Intel Bluetooth Service                                               <=
Intel(R) HD Graphics Control Panel Service                            <=
Intel(R) Capability Licensing Service TCP IP Interface                <=
Intel(R) PROSet Monitoring Service                                    <=
Intel(R) Security Assist                                              <=
Windows Phone IP over USB Transport (IpOverUsbSvc)                    <=
Intel(R) Security Assist Helper                                       <=
Intel(R) Dynamic Application Loader Host Interface Service            <=
Intel(R) Management and Security Application Local Management Service <=
MessagingService_46504                                                <=
Microsoft Dependency Agent                                            <=
Windows Firewall                                                      <=
Wireless PAN DHCP Server                                              <=
Net Driver HPZ12                                                      <=
Sync Host_46504                                                       <=
Contact Data_46504                                                    <=
Pml Driver HPZ12                                                      <=
Intel(R) PROSet/Wireless Registry Service                             <=
Realtek Audio Service                                                 <=
Sandboxie Service                                                     <=
Skype Updater                                                         <=
SQL Server VSS Writer                                                 <=
TeamViewer 12                                                         <=
TokenBroker                                                           <=
User Data Storage_46504                                               <=
User Data Access_46504                                                <=
Unified Write Filter Servicing Helper Service                         <=
Veeam Agent for Microsoft Windows                                     <=
Hyper-V Host Compute Service                                          <=
Hyper-V Virtual Machine Management                                    <=
VMware USB Arbitration Service                                        <=
LPA Service                                                           <=
Windows Push Notifications User Service_46504                         <=
Windows Driver Foundation - User-mode Driver Framework                <=
Intel(R) PROSet/Wireless Zero Configuration Service                   <=
Where-Object : Cannot validate argument on parameter 'Property'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command
again.
At C:\avas\sluzby.ps1:7 char:112
+ ... ct $installed  -Property DisplayName | where $_.SideIndicator -EQ "=> ...
+                                                  ~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Where-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationError,Microsoft.PowerShell.Commands.WhereObjectCommand

Export-Csv : Cannot bind argument to parameter 'InputObject' because it is null.
At C:\avas\sluzby.ps1:10 char:13
+ $vysledek | Export-Csv C:\avas\sluzby$(get-date -f yyyy-MM-dd-hh-mm-s ...
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Export-Csv], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.ExportCsvCommand



PS C:\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      16324
computerName                   DESKTOP-V056PHL
instanceId                     629f5bf8-7b37-4ac2-b498-8ee545aa3140


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="get-date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-M
    onth <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Sec
    ond <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX
    formats. You can use Get-Date to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="get-date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-M
    onth <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Sec
    ond <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX
    formats. You can use Get-Date to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="get-date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-M
    onth <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Sec
    ond <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX
    formats. You can use Get-Date to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="get-date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-M
    onth <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Sec
    ond <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX
    formats. You can use Get-Date to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="get-date"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Get-Date                                           3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="Get-Date"

NAME
    Get-Date

SYNOPSIS
    Gets the current date and time.


SYNTAX
    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-M
    onth <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

    Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Sec
    ond <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]


DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can format the date and time in several Windows and UNIX
    formats. You can use Get-Date to generate a date or time character string, and then send the string to other cmdlets or programs.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821781
    New-TimeSpan
    Set-Date

REMARKS
    To see the examples, type: "get-help Get-Date -examples".
    For more information, type: "get-help Get-Date -detailed".
    For technical information, type: "get-help Get-Date -full".
    For online help, type: "get-help Get-Date -online"


PS C:\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is ./transcript2017-09-12-04-28-28.txt

PS C:\avas> TerminatingError(Where-Object): "Cannot validate argument on parameter 'Property'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again."
Where-Object : Cannot validate argument on parameter 'Property'. The argument is null or empty. Provide an argument that
 is not null or empty, and then try the command again.
At C:\avas\sluzby.ps1:7 char:112
+ ... ct $installed  -Property DisplayName | where $_.SideIndicator -EQ "=> ...
+                                                  ~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Where-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationError,Microsoft.PowerShell.Commands.WhereObjectCommand
Export-Csv : Cannot bind argument to parameter 'InputObject' because it is null.
At C:\avas\sluzby.ps1:10 char:13
+ $vysledek | Export-Csv C:\avas\sluzby$(get-date -f yyyy-MM-dd-hh-mm-s ...
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Export-Csv], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.ExportCsvComm
and
DisplayName                                                           SideIndicator
-----------                                                           -------------
AssignedAccessManager Service                                         =>
Capability Access Manager Service                                     =>
Connected Devices Platform User Service_3477b                         =>
DevicesFlow_3477b                                                     =>
Diagnostic Execution Service                                          =>
Fax                                                                   =>
GraphicsPerfSvc                                                       =>
Služba Aktualizace Google (gupdate)                                   =>
Služba Aktualizace Google (gupdatem)                                  =>
Windows Store Install Service                                         =>
MessagingService_3477b                                                =>
Mozilla Maintenance Service                                           =>
Windows Defender Firewall                                             =>
NVIDIA Display Container LS                                           =>
Sync Host_3477b                                                       =>
Contact Data_3477b                                                    =>
PrintWorkflow_3477b                                                   =>
Windows PushToInstall Service                                         =>
Spatial Data Service                                                  =>
Web Account Manager                                                   =>
User Data Storage_3477b                                               =>
User Data Access_3477b                                                =>
WarpJITSvc                                                            =>
Local Profile Assistant Service                                       =>
Windows Media Player Network Sharing Service                          =>
Work Folders                                                          =>
Windows Push Notifications User Service_3477b                         =>
Adobe Acrobat Update Service                                          <=
Microsoft Monitoring Agent Audit Forwarding                           <=
Connected Devices Platform User Service_46504                         <=
DevicesFlow_46504                                                     <=
Intel(R) PROSet/Wireless Event Log                                    <=
Windows Presentation Foundation Font Cache 3.0.0.0                    <=
Google Update Service (gupdate)                                       <=
Google Update Service (gupdatem)                                      <=
Microsoft Monitoring Agent                                            <=
Host Network Service                                                  <=
HomeGroup Listener                                                    <=
Intel(R) Rapid Storage Technology                                     <=
Intel Bluetooth Service                                               <=
Intel(R) HD Graphics Control Panel Service                            <=
Intel(R) Capability Licensing Service TCP IP Interface                <=
Intel(R) PROSet Monitoring Service                                    <=
Intel(R) Security Assist                                              <=
Windows Phone IP over USB Transport (IpOverUsbSvc)                    <=
Intel(R) Security Assist Helper                                       <=
Intel(R) Dynamic Application Loader Host Interface Service            <=
Intel(R) Management and Security Application Local Management Service <=
MessagingService_46504                                                <=
Microsoft Dependency Agent                                            <=
Windows Firewall                                                      <=
Wireless PAN DHCP Server                                              <=
Net Driver HPZ12                                                      <=
Sync Host_46504                                                       <=
Contact Data_46504                                                    <=
Pml Driver HPZ12                                                      <=
Intel(R) PROSet/Wireless Registry Service                             <=
Realtek Audio Service                                                 <=
Sandboxie Service                                                     <=
Skype Updater                                                         <=
SQL Server VSS Writer                                                 <=
TeamViewer 12                                                         <=
TokenBroker                                                           <=
User Data Storage_46504                                               <=
User Data Access_46504                                                <=
Unified Write Filter Servicing Helper Service                         <=
Veeam Agent for Microsoft Windows                                     <=
Hyper-V Host Compute Service                                          <=
Hyper-V Virtual Machine Management                                    <=
VMware USB Arbitration Service                                        <=
LPA Service                                                           <=
Windows Push Notifications User Service_46504                         <=
Windows Driver Foundation - User-mode Driver Framework                <=
Intel(R) PROSet/Wireless Zero Configuration Service                   <=
Where-Object : Cannot validate argument on parameter 'Property'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command
again.
At C:\avas\sluzby.ps1:7 char:112
+ ... ct $installed  -Property DisplayName | where $_.SideIndicator -EQ "=> ...
+                                                  ~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Where-Object], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationError,Microsoft.PowerShell.Commands.WhereObjectCommand

Export-Csv : Cannot bind argument to parameter 'InputObject' because it is null.
At C:\avas\sluzby.ps1:10 char:13
+ $vysledek | Export-Csv C:\avas\sluzby$(get-date -f yyyy-MM-dd-hh-mm-s ...
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Export-Csv], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Microsoft.PowerShell.Commands.ExportCsvCommand



PS C:\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      16324
computerName                   DESKTOP-V056PHL
instanceId                     629f5bf8-7b37-4ac2-b498-8ee545aa3140


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="New-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


PS C:\avas> CommandInvocation(Get-PSBreakpoint): "Get-PSBreakpoint"
>> ParameterBinding(Get-PSBreakpoint): name="Type"; value="Command"
>> CommandInvocation(Remove-PSBreakpoint): "Remove-PSBreakpoint"
Transcript started, output file is ./transcript2017-09-12-04-28-39.txt
09/12/2017 16:28:39 - Nacitani json konfiguracniho souboru
09/12/2017 16:28:43 - Dokonce nacitani json konfiguracniho souboru
09/12/2017 16:28:43 - zjisteni zda je uzivatel admin
WARNING: Ujistete se ze spoustite AVAS jako administrator! Provedte spusteni jako administrator nebo nemusi vse funogvat korektne!!
09/12/2017 16:28:43 - ukonceno zjistovani zda je uzivatel admin
09/12/2017 16:28:43 - uzivatel je admin pokracuje dalsi spusteni skriptu
09/12/2017 16:28:43 - Nacitam GUI
09/12/2017 16:28:43 Probiha nacitani GUI
09/12/2017 16:28:51 GUI bylo nacteno
09/12/2017 16:28:51 Okno aplikace bylo uspesne nacteno
09/12/2017 16:28:51 Okno aplikace bylo uspesne zavreno
PS C:\avas> @{ 'computerName' = $env:ComputerName; 'processId' = $PID; 'instanceId' = $host.InstanceId }

Name                           Value
----                           -----
processId                      16324
computerName                   DESKTOP-V056PHL
instanceId                     629f5bf8-7b37-4ac2-b498-8ee545aa3140


PS C:\avas> CommandInvocation(Get-Command): "Get-Command"
>> ParameterBinding(Get-Command): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Command): name="Name"; value="New-Object"

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          New-Object                                         3.1.0.0    Microsoft.PowerShell.Utility


PS C:\avas> CommandInvocation(Get-Help): "Get-Help"
>> ParameterBinding(Get-Help): name="ErrorAction"; value="Ignore"
>> ParameterBinding(Get-Help): name="Name"; value="New-Object"

NAME
    New-Object

SYNOPSIS
    Creates an instance of a Microsoft .NET Framework or COM object.


SYNTAX
    New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

    New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]


DESCRIPTION
    The New-Object cmdlet creates an instance of a .NET Framework or COM object.

    You can specify either the type of a .NET Framework class or a ProgID of a COM object. By default, you type the fully qualified name of a .NET Framework class and t
    he cmdlet returns a reference to an instance of that class. To create an instance of a COM object, use the ComObject parameter and specify the ProgID of the object
    as its value.


RELATED LINKS
    Online Version: http://go.microsoft.com/fwlink/?LinkId=821835
    Compare-Object
    Group-Object
    Measure-Object
    Select-Object
    Sort-Object
    Tee-Object

REMARKS
    To see the examples, type: "get-help New-Object -examples".
    For more information, type: "get-help New-Object -detailed".
    For technical information, type: "get-help New-Object -full".
    For online help, type: "get-help New-Object -online"


